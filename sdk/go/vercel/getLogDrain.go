// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/go/vercel/internal"
)

func LookupLogDrain(ctx *pulumi.Context, args *LookupLogDrainArgs, opts ...pulumi.InvokeOption) (*LookupLogDrainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLogDrainResult
	err := ctx.Invoke("vercel:index/getLogDrain:getLogDrain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogDrain.
type LookupLogDrainArgs struct {
	Endpoint string  `pulumi:"endpoint"`
	Id       string  `pulumi:"id"`
	TeamId   *string `pulumi:"teamId"`
}

// A collection of values returned by getLogDrain.
type LookupLogDrainResult struct {
	DeliveryFormat string            `pulumi:"deliveryFormat"`
	Endpoint       string            `pulumi:"endpoint"`
	Environments   []string          `pulumi:"environments"`
	Headers        map[string]string `pulumi:"headers"`
	Id             string            `pulumi:"id"`
	ProjectIds     []string          `pulumi:"projectIds"`
	SamplingRate   float64           `pulumi:"samplingRate"`
	Sources        []string          `pulumi:"sources"`
	TeamId         string            `pulumi:"teamId"`
}

func LookupLogDrainOutput(ctx *pulumi.Context, args LookupLogDrainOutputArgs, opts ...pulumi.InvokeOption) LookupLogDrainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLogDrainResultOutput, error) {
			args := v.(LookupLogDrainArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupLogDrainResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getLogDrain:getLogDrain", args, &rv, "", opts...)
			if err != nil {
				return LookupLogDrainResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupLogDrainResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupLogDrainResultOutput), nil
			}
			return output, nil
		}).(LookupLogDrainResultOutput)
}

// A collection of arguments for invoking getLogDrain.
type LookupLogDrainOutputArgs struct {
	Endpoint pulumi.StringInput    `pulumi:"endpoint"`
	Id       pulumi.StringInput    `pulumi:"id"`
	TeamId   pulumi.StringPtrInput `pulumi:"teamId"`
}

func (LookupLogDrainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogDrainArgs)(nil)).Elem()
}

// A collection of values returned by getLogDrain.
type LookupLogDrainResultOutput struct{ *pulumi.OutputState }

func (LookupLogDrainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogDrainResult)(nil)).Elem()
}

func (o LookupLogDrainResultOutput) ToLookupLogDrainResultOutput() LookupLogDrainResultOutput {
	return o
}

func (o LookupLogDrainResultOutput) ToLookupLogDrainResultOutputWithContext(ctx context.Context) LookupLogDrainResultOutput {
	return o
}

func (o LookupLogDrainResultOutput) DeliveryFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogDrainResult) string { return v.DeliveryFormat }).(pulumi.StringOutput)
}

func (o LookupLogDrainResultOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogDrainResult) string { return v.Endpoint }).(pulumi.StringOutput)
}

func (o LookupLogDrainResultOutput) Environments() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLogDrainResult) []string { return v.Environments }).(pulumi.StringArrayOutput)
}

func (o LookupLogDrainResultOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLogDrainResult) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

func (o LookupLogDrainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogDrainResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLogDrainResultOutput) ProjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLogDrainResult) []string { return v.ProjectIds }).(pulumi.StringArrayOutput)
}

func (o LookupLogDrainResultOutput) SamplingRate() pulumi.Float64Output {
	return o.ApplyT(func(v LookupLogDrainResult) float64 { return v.SamplingRate }).(pulumi.Float64Output)
}

func (o LookupLogDrainResultOutput) Sources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLogDrainResult) []string { return v.Sources }).(pulumi.StringArrayOutput)
}

func (o LookupLogDrainResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogDrainResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogDrainResultOutput{})
}
