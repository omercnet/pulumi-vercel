// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/go/vercel/internal"
)

func LookupProjectMembers(ctx *pulumi.Context, args *LookupProjectMembersArgs, opts ...pulumi.InvokeOption) (*LookupProjectMembersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProjectMembersResult
	err := ctx.Invoke("vercel:index/getProjectMembers:getProjectMembers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProjectMembers.
type LookupProjectMembersArgs struct {
	ProjectId string  `pulumi:"projectId"`
	TeamId    *string `pulumi:"teamId"`
}

// A collection of values returned by getProjectMembers.
type LookupProjectMembersResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string                    `pulumi:"id"`
	Members   []GetProjectMembersMember `pulumi:"members"`
	ProjectId string                    `pulumi:"projectId"`
	TeamId    *string                   `pulumi:"teamId"`
}

func LookupProjectMembersOutput(ctx *pulumi.Context, args LookupProjectMembersOutputArgs, opts ...pulumi.InvokeOption) LookupProjectMembersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProjectMembersResultOutput, error) {
			args := v.(LookupProjectMembersArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupProjectMembersResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getProjectMembers:getProjectMembers", args, &rv, "", opts...)
			if err != nil {
				return LookupProjectMembersResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupProjectMembersResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupProjectMembersResultOutput), nil
			}
			return output, nil
		}).(LookupProjectMembersResultOutput)
}

// A collection of arguments for invoking getProjectMembers.
type LookupProjectMembersOutputArgs struct {
	ProjectId pulumi.StringInput    `pulumi:"projectId"`
	TeamId    pulumi.StringPtrInput `pulumi:"teamId"`
}

func (LookupProjectMembersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMembersArgs)(nil)).Elem()
}

// A collection of values returned by getProjectMembers.
type LookupProjectMembersResultOutput struct{ *pulumi.OutputState }

func (LookupProjectMembersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProjectMembersResult)(nil)).Elem()
}

func (o LookupProjectMembersResultOutput) ToLookupProjectMembersResultOutput() LookupProjectMembersResultOutput {
	return o
}

func (o LookupProjectMembersResultOutput) ToLookupProjectMembersResultOutputWithContext(ctx context.Context) LookupProjectMembersResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupProjectMembersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMembersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupProjectMembersResultOutput) Members() GetProjectMembersMemberArrayOutput {
	return o.ApplyT(func(v LookupProjectMembersResult) []GetProjectMembersMember { return v.Members }).(GetProjectMembersMemberArrayOutput)
}

func (o LookupProjectMembersResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProjectMembersResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupProjectMembersResultOutput) TeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupProjectMembersResult) *string { return v.TeamId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProjectMembersResultOutput{})
}
