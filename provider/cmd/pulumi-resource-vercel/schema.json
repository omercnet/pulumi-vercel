{
    "name": "vercel",
    "displayName": "Vercel",
    "keywords": [
        "pulumi",
        "vercel",
        "category/cloud"
    ],
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`vercel` Terraform Provider](https://github.com/vercel/terraform-provider-vercel).",
    "repository": "https://github.com/pulumiverse/pulumi-vercel",
    "pluginDownloadURL": "github://api.github.com/pulumiverse",
    "publisher": "Pulumiverse",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "rootNamespace": "Pulumiverse"
        },
        "go": {
            "importBasePath": "github.com/pulumiverse/pulumi-vercel/sdk/go/vercel",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true
        },
        "java": {
            "basePackage": "com.pulumiverse",
            "buildFiles": "",
            "gradleNexusPublishPluginVersion": "",
            "gradleTest": ""
        },
        "nodejs": {
            "packageName": "@pulumiverse/vercel",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/vercel/terraform-provider-vercel)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-vercel` repo](https://github.com/pulumiverse/pulumi-vercel/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-vercel` repo](https://github.com/vercel/terraform-provider-vercel/issues).",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true
        },
        "python": {
            "packageName": "pulumiverse_vercel",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            },
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/vercel/terraform-provider-vercel)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-vercel` repo](https://github.com/pulumiverse/pulumi-vercel/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-vercel` repo](https://github.com/vercel/terraform-provider-vercel/issues).",
            "compatibility": "tfbridge20",
            "pyproject": {}
        }
    },
    "config": {
        "variables": {
            "apiToken": {
                "type": "string",
                "description": "The Vercel API Token to use. This can also be specified with the `VERCEL_API_TOKEN` shell environment variable. Tokens\ncan be created from your [Vercel settings](https://vercel.com/account/tokens).\n",
                "secret": true
            },
            "team": {
                "type": "string",
                "description": "The default Vercel Team to use when creating resources or reading data sources. This can be provided as either a team\nslug, or team ID. The slug and ID are both available from the Team Settings page in the Vercel dashboard.\n"
            }
        }
    },
    "types": {
        "vercel:index/CustomEnvironmentBranchTracking:CustomEnvironmentBranchTracking": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "The pattern of the branch name to track.\n"
                },
                "type": {
                    "type": "string",
                    "description": "How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.\n"
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "type"
            ]
        },
        "vercel:index/DeploymentProjectSettings:DeploymentProjectSettings": {
            "properties": {
                "buildCommand": {
                    "type": "string",
                    "description": "The build command for this deployment. If omitted, this value will be taken from the project or automatically detected.\n"
                },
                "framework": {
                    "type": "string",
                    "description": "The framework that is being used for this deployment. If omitted, no framework is selected.\n"
                },
                "installCommand": {
                    "type": "string",
                    "description": "The install command for this deployment. If omitted, this value will be taken from the project or automatically detected.\n"
                },
                "outputDirectory": {
                    "type": "string",
                    "description": "The output directory of the deployment. If omitted, this value will be taken from the project or automatically detected.\n"
                },
                "rootDirectory": {
                    "type": "string",
                    "description": "The name of a directory or relative path to the source code of your project. When null is used it will default to the project root.\n"
                }
            },
            "type": "object"
        },
        "vercel:index/DnsRecordSrv:DnsRecordSrv": {
            "properties": {
                "port": {
                    "type": "integer",
                    "description": "The TCP or UDP port on which the service is to be found.\n"
                },
                "priority": {
                    "type": "integer",
                    "description": "The priority of the target host, lower value means more preferred.\n"
                },
                "target": {
                    "type": "string",
                    "description": "The canonical hostname of the machine providing the service, ending in a dot.\n"
                },
                "weight": {
                    "type": "integer",
                    "description": "A relative weight for records with the same priority, higher value means higher chance of getting picked.\n"
                }
            },
            "type": "object",
            "required": [
                "port",
                "priority",
                "target",
                "weight"
            ]
        },
        "vercel:index/FirewallConfigIpRules:FirewallConfigIpRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/FirewallConfigIpRulesRule:FirewallConfigIpRulesRule"
                    }
                }
            },
            "type": "object"
        },
        "vercel:index/FirewallConfigIpRulesRule:FirewallConfigIpRulesRule": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string",
                    "description": "Hosts to apply these rules to\n"
                },
                "id": {
                    "type": "string"
                },
                "ip": {
                    "type": "string",
                    "description": "IP or CIDR to block\n"
                },
                "notes": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "action",
                "hostname",
                "ip"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "hostname",
                        "id",
                        "ip"
                    ]
                }
            }
        },
        "vercel:index/FirewallConfigManagedRulesets:FirewallConfigManagedRulesets": {
            "properties": {
                "owasp": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwasp:FirewallConfigManagedRulesetsOwasp",
                    "description": "Enable the owasp managed rulesets and select ruleset behaviors\n"
                }
            },
            "type": "object"
        },
        "vercel:index/FirewallConfigManagedRulesetsOwasp:FirewallConfigManagedRulesetsOwasp": {
            "properties": {
                "gen": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspGen:FirewallConfigManagedRulesetsOwaspGen",
                    "description": "Generic Attack Detection\n"
                },
                "java": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspJava:FirewallConfigManagedRulesetsOwaspJava",
                    "description": "Java Attack Detection\n"
                },
                "lfi": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspLfi:FirewallConfigManagedRulesetsOwaspLfi",
                    "description": "Local File Inclusion Rules\n"
                },
                "ma": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspMa:FirewallConfigManagedRulesetsOwaspMa",
                    "description": "Multipart Rules\n"
                },
                "php": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspPhp:FirewallConfigManagedRulesetsOwaspPhp",
                    "description": "PHP Attack Detection\n"
                },
                "rce": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspRce:FirewallConfigManagedRulesetsOwaspRce",
                    "description": "Remote Code Execution Rules\n"
                },
                "rfi": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspRfi:FirewallConfigManagedRulesetsOwaspRfi",
                    "description": "Remote File Inclusion Rules\n"
                },
                "sd": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspSd:FirewallConfigManagedRulesetsOwaspSd",
                    "description": "Scanner Detection Rules\n"
                },
                "sqli": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspSqli:FirewallConfigManagedRulesetsOwaspSqli",
                    "description": "SQL Injection Rules\n"
                },
                "xss": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesetsOwaspXss:FirewallConfigManagedRulesetsOwaspXss",
                    "description": "Cross Site Scripting Rules\n"
                }
            },
            "type": "object"
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspGen:FirewallConfigManagedRulesetsOwaspGen": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspJava:FirewallConfigManagedRulesetsOwaspJava": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspLfi:FirewallConfigManagedRulesetsOwaspLfi": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspMa:FirewallConfigManagedRulesetsOwaspMa": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspPhp:FirewallConfigManagedRulesetsOwaspPhp": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspRce:FirewallConfigManagedRulesetsOwaspRce": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspRfi:FirewallConfigManagedRulesetsOwaspRfi": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspSd:FirewallConfigManagedRulesetsOwaspSd": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspSqli:FirewallConfigManagedRulesetsOwaspSqli": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigManagedRulesetsOwaspXss:FirewallConfigManagedRulesetsOwaspXss": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "active": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigRules:FirewallConfigRules": {
            "properties": {
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/FirewallConfigRulesRule:FirewallConfigRulesRule"
                    }
                }
            },
            "type": "object"
        },
        "vercel:index/FirewallConfigRulesRule:FirewallConfigRulesRule": {
            "properties": {
                "action": {
                    "$ref": "#/types/vercel:index/FirewallConfigRulesRuleAction:FirewallConfigRulesRuleAction",
                    "description": "Actions to take when the condition groups match a request\n"
                },
                "active": {
                    "type": "boolean",
                    "description": "Rule is active or disabled\n"
                },
                "conditionGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/FirewallConfigRulesRuleConditionGroup:FirewallConfigRulesRuleConditionGroup"
                    },
                    "description": "Sets of conditions that may match a request\n"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "Name to identify the rule\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "conditionGroups",
                "name"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "action",
                        "conditionGroups",
                        "id",
                        "name"
                    ]
                }
            }
        },
        "vercel:index/FirewallConfigRulesRuleAction:FirewallConfigRulesRuleAction": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Base action\n"
                },
                "actionDuration": {
                    "type": "string",
                    "description": "Forward persistence of a rule aciton\n"
                },
                "rateLimit": {
                    "$ref": "#/types/vercel:index/FirewallConfigRulesRuleActionRateLimit:FirewallConfigRulesRuleActionRateLimit",
                    "description": "Behavior or a rate limiting action. Required if action is rate_limit\n"
                },
                "redirect": {
                    "$ref": "#/types/vercel:index/FirewallConfigRulesRuleActionRedirect:FirewallConfigRulesRuleActionRedirect",
                    "description": "How to redirect a request. Required if action is redirect\n"
                }
            },
            "type": "object",
            "required": [
                "action"
            ]
        },
        "vercel:index/FirewallConfigRulesRuleActionRateLimit:FirewallConfigRulesRuleActionRateLimit": {
            "properties": {
                "action": {
                    "type": "string",
                    "description": "Action to take when rate limit is exceeded\n"
                },
                "algo": {
                    "type": "string",
                    "description": "Rate limiting algorithm\n"
                },
                "keys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Keys used to bucket an individual client\n"
                },
                "limit": {
                    "type": "integer",
                    "description": "number of requests allowed in the window\n"
                },
                "window": {
                    "type": "integer",
                    "description": "Time window in seconds\n"
                }
            },
            "type": "object",
            "required": [
                "action",
                "algo",
                "keys",
                "limit",
                "window"
            ]
        },
        "vercel:index/FirewallConfigRulesRuleActionRedirect:FirewallConfigRulesRuleActionRedirect": {
            "properties": {
                "location": {
                    "type": "string"
                },
                "permanent": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "required": [
                "location",
                "permanent"
            ]
        },
        "vercel:index/FirewallConfigRulesRuleConditionGroup:FirewallConfigRulesRuleConditionGroup": {
            "properties": {
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/FirewallConfigRulesRuleConditionGroupCondition:FirewallConfigRulesRuleConditionGroupCondition"
                    },
                    "description": "Conditions that must all match within a group\n"
                }
            },
            "type": "object",
            "required": [
                "conditions"
            ]
        },
        "vercel:index/FirewallConfigRulesRuleConditionGroupCondition:FirewallConfigRulesRuleConditionGroupCondition": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Key within type to match against\n"
                },
                "neg": {
                    "type": "boolean"
                },
                "op": {
                    "type": "string",
                    "description": "How to comparse type to value\n"
                },
                "type": {
                    "type": "string",
                    "description": "Request key type to match against\n"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "op",
                "type"
            ]
        },
        "vercel:index/ProjectEnvironment:ProjectEnvironment": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the environment variable is for.\n"
                },
                "customEnvironmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `custom_environment_ids` must be set.\n"
                },
                "gitBranch": {
                    "type": "string",
                    "description": "The git branch of the Environment Variable.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the Environment Variable.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the Environment Variable.\n"
                },
                "sensitive": {
                    "type": "boolean",
                    "description": "Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable policy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `custom_environment_ids` must be set.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the Environment Variable.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "comment",
                        "customEnvironmentIds",
                        "id",
                        "key",
                        "sensitive",
                        "targets",
                        "value"
                    ]
                }
            }
        },
        "vercel:index/ProjectEnvironmentVariablesVariable:ProjectEnvironmentVariablesVariable": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the environment variable is for.\n"
                },
                "customEnvironmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or `custom_environment_ids` must be set.\n"
                },
                "gitBranch": {
                    "type": "string",
                    "description": "The git branch of the Environment Variable.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the Environment Variable.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the Environment Variable.\n"
                },
                "sensitive": {
                    "type": "boolean",
                    "description": "Whether the Environment Variable is sensitive or not.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`, or `development`. At least one of `target` or `custom_environment_ids` must be set.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the Environment Variable.\n"
                }
            },
            "type": "object",
            "required": [
                "key",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "comment",
                        "customEnvironmentIds",
                        "id",
                        "key",
                        "sensitive",
                        "targets",
                        "value"
                    ]
                }
            }
        },
        "vercel:index/ProjectGitComments:ProjectGitComments": {
            "properties": {
                "onCommit": {
                    "type": "boolean",
                    "description": "Whether Commit comments are enabled\n"
                },
                "onPullRequest": {
                    "type": "boolean",
                    "description": "Whether Pull Request comments are enabled\n"
                }
            },
            "type": "object",
            "required": [
                "onCommit",
                "onPullRequest"
            ]
        },
        "vercel:index/ProjectGitRepository:ProjectGitRepository": {
            "properties": {
                "deployHooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectGitRepositoryDeployHook:ProjectGitRepositoryDeployHook"
                    },
                    "description": "Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.\n"
                },
                "productionBranch": {
                    "type": "string",
                    "description": "By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.\n"
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the git repository. For example: `vercel/next.js`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.\n"
                }
            },
            "type": "object",
            "required": [
                "repo",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "productionBranch",
                        "repo",
                        "type"
                    ]
                }
            }
        },
        "vercel:index/ProjectGitRepositoryDeployHook:ProjectGitRepositoryDeployHook": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the deploy hook.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the deploy hook.\n"
                },
                "ref": {
                    "type": "string",
                    "description": "The branch or commit hash that should be deployed.\n"
                },
                "url": {
                    "type": "string",
                    "description": "A URL that, when a POST request is made to, will trigger a new deployment.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "name",
                "ref"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "id",
                        "name",
                        "ref",
                        "url"
                    ]
                }
            }
        },
        "vercel:index/ProjectMembersMember:ProjectMembersMember": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email of the user to add to the project. Exactly one of `user_id`, `email`, or `username` must be specified.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that the user should have in the project. One of 'MEMBER', 'PROJECT_DEVELOPER', or 'PROJECT_VIEWER'.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user to add to the project. Exactly one of `user_id`, `email`, or `username` must be specified.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the user to add to the project. Exactly one of `user_id`, `email`, or `username` must be specified.\n"
                }
            },
            "type": "object",
            "required": [
                "role"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "email",
                        "role",
                        "userId",
                        "username"
                    ]
                }
            }
        },
        "vercel:index/ProjectOidcTokenConfig:ProjectOidcTokenConfig": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[team_slug]` `global` = `https://oidc.vercel.com`\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled",
                        "issuerMode"
                    ]
                }
            }
        },
        "vercel:index/ProjectOptionsAllowlist:ProjectOptionsAllowlist": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectOptionsAllowlistPath:ProjectOptionsAllowlistPath"
                    },
                    "description": "The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.\n"
                }
            },
            "type": "object",
            "required": [
                "paths"
            ]
        },
        "vercel:index/ProjectOptionsAllowlistPath:ProjectOptionsAllowlistPath": {
            "properties": {
                "value": {
                    "type": "string",
                    "description": "The path prefix to compare with the incoming request path.\n"
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "vercel:index/ProjectPasswordProtection:ProjectPasswordProtection": {
            "properties": {
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment environment to protect. Must be one of `standard_protection`, `all_deployments`, or `only_preview_deployments`.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password that visitors must enter to gain access to your Preview Deployments. Drift detection is not possible for this field.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "deploymentType",
                "password"
            ]
        },
        "vercel:index/ProjectResourceConfig:ProjectResourceConfig": {
            "properties": {
                "functionDefaultCpuType": {
                    "type": "string",
                    "description": "The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).\n"
                },
                "functionDefaultTimeout": {
                    "type": "integer",
                    "description": "The default timeout for Serverless Functions.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "functionDefaultCpuType",
                        "functionDefaultTimeout"
                    ]
                }
            }
        },
        "vercel:index/ProjectTrustedIps:ProjectTrustedIps": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectTrustedIpsAddress:ProjectTrustedIpsAddress"
                    },
                    "description": "The allowed IP addressses and CIDR ranges with optional descriptions.\n"
                },
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment environment to protect. Must be one of `standard_protection`, `all_deployments`, `only_production_deployments`, or `only_preview_deployments`.\n"
                },
                "protectionMode": {
                    "type": "string",
                    "description": "Whether or not Trusted IPs is optional to access a deployment. Must be either `trusted_ip_required` or `trusted_ip_optional`. `trusted_ip_optional` is only available with Standalone Trusted IPs.\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "deploymentType"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "addresses",
                        "deploymentType",
                        "protectionMode"
                    ]
                }
            }
        },
        "vercel:index/ProjectTrustedIpsAddress:ProjectTrustedIpsAddress": {
            "properties": {
                "note": {
                    "type": "string",
                    "description": "A description for the value\n"
                },
                "value": {
                    "type": "string",
                    "description": "The address or CIDR range that can access deployments.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "value"
            ]
        },
        "vercel:index/ProjectVercelAuthentication:ProjectVercelAuthentication": {
            "properties": {
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment environment to protect. Must be one of `standard_protection`, `all_deployments`, `only_preview_deployments`, or `none`.\n"
                }
            },
            "type": "object",
            "required": [
                "deploymentType"
            ]
        },
        "vercel:index/TeamConfigRemoteCaching:TeamConfigRemoteCaching": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if Remote Caching is enabled.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "enabled"
                    ]
                }
            }
        },
        "vercel:index/TeamConfigSaml:TeamConfigSaml": {
            "properties": {
                "accessGroupId": {
                    "type": "string",
                    "description": "The ID of the access group to use for the team.\n"
                },
                "enforced": {
                    "type": "boolean",
                    "description": "Indicates if SAML is enforced for the team.\n"
                },
                "roles": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Directory groups to role or access group mappings.\n"
                }
            },
            "type": "object",
            "required": [
                "enforced"
            ]
        },
        "vercel:index/TeamMemberProject:TeamMemberProject": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project that the user should be granted access to.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that the user should have in the project.\n"
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "role"
            ]
        },
        "vercel:index/getCustomEnvironmentBranchTracking:getCustomEnvironmentBranchTracking": {
            "properties": {
                "pattern": {
                    "type": "string",
                    "description": "The pattern of the branch name to track.\n"
                },
                "type": {
                    "type": "string",
                    "description": "How a branch name should be matched against the pattern. Must be one of 'startsWith', 'endsWith' or 'equals'.\n"
                }
            },
            "type": "object",
            "required": [
                "pattern",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectEnvironment:getProjectEnvironment": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the environment variable is for.\n"
                },
                "customEnvironmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of Custom Environments that the Environment Variable should be present on.\n"
                },
                "gitBranch": {
                    "type": "string",
                    "description": "The git branch of the environment variable.\n"
                },
                "id": {
                    "type": "string",
                    "description": "The ID of the environment variable\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the environment variable.\n"
                },
                "sensitive": {
                    "type": "boolean",
                    "description": "Whether the Environment Variable is sensitive or not. Note that the value will be `null` for sensitive environment variables.\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that the environment variable should be present on. Valid targets are either `production`, `preview`, or `development`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the environment variable.\n"
                }
            },
            "type": "object",
            "required": [
                "comment",
                "customEnvironmentIds",
                "gitBranch",
                "id",
                "key",
                "sensitive",
                "targets",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectGitComments:getProjectGitComments": {
            "properties": {
                "onCommit": {
                    "type": "boolean",
                    "description": "Whether Commit comments are enabled\n"
                },
                "onPullRequest": {
                    "type": "boolean",
                    "description": "Whether Pull Request comments are enabled\n"
                }
            },
            "type": "object",
            "required": [
                "onCommit",
                "onPullRequest"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectGitRepository:getProjectGitRepository": {
            "properties": {
                "deployHooks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/getProjectGitRepositoryDeployHook:getProjectGitRepositoryDeployHook"
                    },
                    "description": "Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.\n"
                },
                "productionBranch": {
                    "type": "string",
                    "description": "By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.\n"
                },
                "repo": {
                    "type": "string",
                    "description": "The name of the git repository. For example: `vercel/next.js`.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.\n"
                }
            },
            "type": "object",
            "required": [
                "deployHooks",
                "productionBranch",
                "repo",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectGitRepositoryDeployHook:getProjectGitRepositoryDeployHook": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the deploy hook.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the deploy hook.\n"
                },
                "ref": {
                    "type": "string",
                    "description": "The branch or commit hash that should be deployed.\n"
                },
                "url": {
                    "type": "string",
                    "description": "A URL that, when a POST request is made to, will trigger a new deployment.\n",
                    "secret": true
                }
            },
            "type": "object",
            "required": [
                "id",
                "name",
                "ref",
                "url"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectMembersMember:getProjectMembersMember": {
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email of the user.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role of the user in the project. One of 'MEMBER', 'PROJECT_DEVELOPER', or 'PROJECT_VIEWER'.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of the user.\n"
                }
            },
            "type": "object",
            "required": [
                "email",
                "role",
                "userId",
                "username"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectOidcTokenConfig:getProjectOidcTokenConfig": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "When true, Vercel issued OpenID Connect (OIDC) tokens will be available on the compute environments. See https://vercel.com/docs/security/secure-backend-access/oidc for more information.\n"
                },
                "issuerMode": {
                    "type": "string",
                    "description": "Configures the URL of the `iss` claim. `team` = `https://oidc.vercel.com/[team_slug]` `global` = `https://oidc.vercel.com`\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "issuerMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectOptionsAllowlist:getProjectOptionsAllowlist": {
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/getProjectOptionsAllowlistPath:getProjectOptionsAllowlistPath"
                    },
                    "description": "The allowed paths for the OPTIONS Allowlist. Incoming requests will bypass Deployment Protection if they have the method `OPTIONS` and **start with** one of the path values.\n"
                }
            },
            "type": "object",
            "required": [
                "paths"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectOptionsAllowlistPath:getProjectOptionsAllowlistPath": {
            "properties": {
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectPasswordProtection:getProjectPasswordProtection": {
            "properties": {
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment environment that will be protected.\n"
                }
            },
            "type": "object",
            "required": [
                "deploymentType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectResourceConfig:getProjectResourceConfig": {
            "properties": {
                "functionDefaultCpuType": {
                    "type": "string",
                    "description": "The amount of CPU available to your Serverless Functions. Should be one of 'standard_legacy' (0.6vCPU), 'standard' (1vCPU) or 'performance' (1.7vCPUs).\n"
                },
                "functionDefaultTimeout": {
                    "type": "integer",
                    "description": "The default timeout for Serverless Functions.\n"
                }
            },
            "type": "object",
            "required": [
                "functionDefaultCpuType",
                "functionDefaultTimeout"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectTrustedIps:getProjectTrustedIps": {
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/getProjectTrustedIpsAddress:getProjectTrustedIpsAddress"
                    },
                    "description": "The allowed IP addressses and CIDR ranges with optional descriptions.\n"
                },
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment environment that will be protected.\n"
                },
                "protectionMode": {
                    "type": "string",
                    "description": "Whether or not Trusted IPs is required or optional to access a deployment.\n"
                }
            },
            "type": "object",
            "required": [
                "addresses",
                "deploymentType",
                "protectionMode"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectTrustedIpsAddress:getProjectTrustedIpsAddress": {
            "properties": {
                "note": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "note",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getProjectVercelAuthentication:getProjectVercelAuthentication": {
            "properties": {
                "deploymentType": {
                    "type": "string",
                    "description": "The deployment environment that will be protected.\n"
                }
            },
            "type": "object",
            "required": [
                "deploymentType"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getTeamConfigRemoteCaching:getTeamConfigRemoteCaching": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Indicates if Remote Caching is enabled.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getTeamConfigSaml:getTeamConfigSaml": {
            "properties": {
                "accessGroupId": {
                    "type": "string",
                    "description": "The ID of the access group to use for the team.\n"
                },
                "enforced": {
                    "type": "boolean",
                    "description": "Indicates if SAML is enforced for the team.\n"
                },
                "roles": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Directory groups to role or access group mappings.\n"
                }
            },
            "type": "object",
            "required": [
                "accessGroupId",
                "enforced",
                "roles"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "vercel:index/getTeamMemberProject:getTeamMemberProject": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project that the user should be granted access to.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that the user should have in the project.\n"
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "role"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the vercel package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiToken": {
                "type": "string",
                "description": "The Vercel API Token to use. This can also be specified with the `VERCEL_API_TOKEN` shell environment variable. Tokens\ncan be created from your [Vercel settings](https://vercel.com/account/tokens).\n",
                "secret": true
            },
            "team": {
                "type": "string",
                "description": "The default Vercel Team to use when creating resources or reading data sources. This can be provided as either a team\nslug, or team ID. The slug and ID are both available from the Team Settings page in the Vercel dashboard.\n"
            }
        },
        "inputProperties": {
            "apiToken": {
                "type": "string",
                "description": "The Vercel API Token to use. This can also be specified with the `VERCEL_API_TOKEN` shell environment variable. Tokens\ncan be created from your [Vercel settings](https://vercel.com/account/tokens).\n",
                "secret": true
            },
            "team": {
                "type": "string",
                "description": "The default Vercel Team to use when creating resources or reading data sources. This can be provided as either a team\nslug, or team ID. The slug and ID are both available from the Team Settings page in the Vercel dashboard.\n"
            }
        }
    },
    "resources": {
        "vercel:index/accessGroup:AccessGroup": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Access Group\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Access Group should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "required": [
                "name",
                "teamId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name of the Access Group\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Access Group should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessGroup resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the Access Group\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Access Group should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/accessGroupProject:AccessGroupProject": {
            "properties": {
                "accessGroupId": {
                    "type": "string",
                    "description": "The ID of the Access Group.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The Project ID to assign to the access group.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The project role to assign to the access group. Must be either `ADMIN`, `PROJECT_DEVELOPER`, or `PROJECT_VIEWER`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the access group project should exist under. Required when configuring a team resource if a default\nteam has not been set in the provider.\n"
                }
            },
            "required": [
                "accessGroupId",
                "projectId",
                "role",
                "teamId"
            ],
            "inputProperties": {
                "accessGroupId": {
                    "type": "string",
                    "description": "The ID of the Access Group.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The Project ID to assign to the access group.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The project role to assign to the access group. Must be either `ADMIN`, `PROJECT_DEVELOPER`, or `PROJECT_VIEWER`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the access group project should exist under. Required when configuring a team resource if a default\nteam has not been set in the provider.\n"
                }
            },
            "requiredInputs": [
                "accessGroupId",
                "projectId",
                "role"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccessGroupProject resources.\n",
                "properties": {
                    "accessGroupId": {
                        "type": "string",
                        "description": "The ID of the Access Group.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The Project ID to assign to the access group.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The project role to assign to the access group. Must be either `ADMIN`, `PROJECT_DEVELOPER`, or `PROJECT_VIEWER`.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the access group project should exist under. Required when configuring a team resource if a default\nteam has not been set in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/alias:Alias": {
            "properties": {
                "alias": {
                    "type": "string",
                    "description": "The Alias we want to assign to the deployment defined in the URL.\n",
                    "language": {
                        "csharp": {
                            "name": "DeploymentAlias"
                        }
                    }
                },
                "deploymentId": {
                    "type": "string",
                    "description": "The id of the Deployment the Alias should be associated with.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "required": [
                "alias",
                "deploymentId",
                "teamId"
            ],
            "inputProperties": {
                "alias": {
                    "type": "string",
                    "description": "The Alias we want to assign to the deployment defined in the URL.\n",
                    "language": {
                        "csharp": {
                            "name": "DeploymentAlias"
                        }
                    }
                },
                "deploymentId": {
                    "type": "string",
                    "description": "The id of the Deployment the Alias should be associated with.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "requiredInputs": [
                "alias",
                "deploymentId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Alias resources.\n",
                "properties": {
                    "alias": {
                        "type": "string",
                        "description": "The Alias we want to assign to the deployment defined in the URL.\n",
                        "language": {
                            "csharp": {
                                "name": "DeploymentAlias"
                            }
                        }
                    },
                    "deploymentId": {
                        "type": "string",
                        "description": "The id of the Deployment the Alias should be associated with.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Alias and Deployment exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/attackChallengeMode:AttackChallengeMode": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether Attack Challenge Mode is enabled or not.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Project to toggle Attack Challenge Mode on.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been\nset in the provider.\n"
                }
            },
            "required": [
                "enabled",
                "projectId",
                "teamId"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether Attack Challenge Mode is enabled or not.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Project to toggle Attack Challenge Mode on.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been\nset in the provider.\n"
                }
            },
            "requiredInputs": [
                "enabled",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AttackChallengeMode resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether Attack Challenge Mode is enabled or not.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the Project to toggle Attack Challenge Mode on.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Project exists under. Required when configuring a team resource if a default team has not been\nset in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/customEnvironment:CustomEnvironment": {
            "properties": {
                "branchTracking": {
                    "$ref": "#/types/vercel:index/CustomEnvironmentBranchTracking:CustomEnvironmentBranchTracking",
                    "description": "The branch tracking configuration for the environment. When enabled, each qualifying merge will generate a deployment.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what the environment is.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the existing Vercel Project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                }
            },
            "required": [
                "branchTracking",
                "description",
                "name",
                "projectId",
                "teamId"
            ],
            "inputProperties": {
                "branchTracking": {
                    "$ref": "#/types/vercel:index/CustomEnvironmentBranchTracking:CustomEnvironmentBranchTracking",
                    "description": "The branch tracking configuration for the environment. When enabled, each qualifying merge will generate a deployment.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of what the environment is.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the environment.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the existing Vercel Project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CustomEnvironment resources.\n",
                "properties": {
                    "branchTracking": {
                        "$ref": "#/types/vercel:index/CustomEnvironmentBranchTracking:CustomEnvironmentBranchTracking",
                        "description": "The branch tracking configuration for the environment. When enabled, each qualifying merge will generate a deployment.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of what the environment is.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the environment.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the existing Vercel Project.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/deployment:Deployment": {
            "properties": {
                "deleteOnDestroy": {
                    "type": "boolean"
                },
                "domains": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of all the domains (default domains, staging domains and production domains) that were assigned upon deployment\ncreation.\n"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of environment variable names to values. These are specific to a Deployment, and can also be configured on the\n`vercel.Project` resource.\n"
                },
                "files": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of files to be uploaded for the deployment. This should be provided by a `vercel.getProjectDirectory` or\n`vercel.getFile` data source. Required if `git_source` is not set.\n"
                },
                "pathPrefix": {
                    "type": "string",
                    "description": "If specified then the `path_prefix` will be stripped from the start of file paths as they are uploaded to Vercel. If\nthis is omitted, then any leading `../`s will be stripped.\n"
                },
                "production": {
                    "type": "boolean",
                    "description": "true if the deployment is a production deployment, meaning production aliases will be assigned.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID to add the deployment to.\n"
                },
                "projectSettings": {
                    "$ref": "#/types/vercel:index/DeploymentProjectSettings:DeploymentProjectSettings",
                    "description": "Project settings that will be applied to the deployment.\n"
                },
                "ref": {
                    "type": "string",
                    "description": "The branch or commit hash that should be deployed. Note this will only work if the project is configured to use a Git\nrepository. Required if `files` is not set.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the deployment to. Required when configuring a team resource if a default team has not been set in\nthe provider.\n"
                },
                "url": {
                    "type": "string",
                    "description": "A unique URL that is automatically generated for a deployment.\n"
                }
            },
            "required": [
                "domains",
                "production",
                "projectId",
                "teamId",
                "url"
            ],
            "inputProperties": {
                "deleteOnDestroy": {
                    "type": "boolean"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of environment variable names to values. These are specific to a Deployment, and can also be configured on the\n`vercel.Project` resource.\n"
                },
                "files": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "A map of files to be uploaded for the deployment. This should be provided by a `vercel.getProjectDirectory` or\n`vercel.getFile` data source. Required if `git_source` is not set.\n"
                },
                "pathPrefix": {
                    "type": "string",
                    "description": "If specified then the `path_prefix` will be stripped from the start of file paths as they are uploaded to Vercel. If\nthis is omitted, then any leading `../`s will be stripped.\n"
                },
                "production": {
                    "type": "boolean",
                    "description": "true if the deployment is a production deployment, meaning production aliases will be assigned.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID to add the deployment to.\n"
                },
                "projectSettings": {
                    "$ref": "#/types/vercel:index/DeploymentProjectSettings:DeploymentProjectSettings",
                    "description": "Project settings that will be applied to the deployment.\n"
                },
                "ref": {
                    "type": "string",
                    "description": "The branch or commit hash that should be deployed. Note this will only work if the project is configured to use a Git\nrepository. Required if `files` is not set.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the deployment to. Required when configuring a team resource if a default team has not been set in\nthe provider.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Deployment resources.\n",
                "properties": {
                    "deleteOnDestroy": {
                        "type": "boolean"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of all the domains (default domains, staging domains and production domains) that were assigned upon deployment\ncreation.\n"
                    },
                    "environment": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of environment variable names to values. These are specific to a Deployment, and can also be configured on the\n`vercel.Project` resource.\n"
                    },
                    "files": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "A map of files to be uploaded for the deployment. This should be provided by a `vercel.getProjectDirectory` or\n`vercel.getFile` data source. Required if `git_source` is not set.\n"
                    },
                    "pathPrefix": {
                        "type": "string",
                        "description": "If specified then the `path_prefix` will be stripped from the start of file paths as they are uploaded to Vercel. If\nthis is omitted, then any leading `../`s will be stripped.\n"
                    },
                    "production": {
                        "type": "boolean",
                        "description": "true if the deployment is a production deployment, meaning production aliases will be assigned.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID to add the deployment to.\n"
                    },
                    "projectSettings": {
                        "$ref": "#/types/vercel:index/DeploymentProjectSettings:DeploymentProjectSettings",
                        "description": "Project settings that will be applied to the deployment.\n"
                    },
                    "ref": {
                        "type": "string",
                        "description": "The branch or commit hash that should be deployed. Note this will only work if the project is configured to use a Git\nrepository. Required if `files` is not set.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team ID to add the deployment to. Required when configuring a team resource if a default team has not been set in\nthe provider.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "A unique URL that is automatically generated for a deployment.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/dnsRecord:DnsRecord": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the DNS record is for.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name, or zone, that the DNS record should be created beneath.\n"
                },
                "mxPriority": {
                    "type": "integer",
                    "description": "The priority of the MX record. The priority specifies the sequence that an email server receives emails. A smaller value\nindicates a higher priority.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The subdomain name of the record. This should be an empty string if the rercord is for the root domain.\n"
                },
                "srv": {
                    "$ref": "#/types/vercel:index/DnsRecordSrv:DnsRecordSrv",
                    "description": "Settings for an SRV record.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID that the domain and DNS records belong to. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL value in seconds. Must be a number between 60 and 2147483647. If unspecified, it will default to 60 seconds.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of DNS record. Available types: `A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `MX`, `NS`, `SRV`, `TXT`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the DNS record. The format depends on the 'type' property. For an 'A' record, this should be a valid IPv4\naddress. For an 'AAAA' record, this should be an IPv6 address. For 'ALIAS' records, this should be a hostname. For 'CAA'\nrecords, this should specify specify which Certificate Authorities (CAs) are allowed to issue certificates for the\ndomain. For 'CNAME' records, this should be a different domain name. For 'MX' records, this should specify the mail\nserver responsible for accepting messages on behalf of the domain name. For 'TXT' records, this can contain arbitrary\ntext.\n"
                }
            },
            "required": [
                "comment",
                "domain",
                "name",
                "teamId",
                "ttl",
                "type"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the DNS record is for.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name, or zone, that the DNS record should be created beneath.\n"
                },
                "mxPriority": {
                    "type": "integer",
                    "description": "The priority of the MX record. The priority specifies the sequence that an email server receives emails. A smaller value\nindicates a higher priority.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The subdomain name of the record. This should be an empty string if the rercord is for the root domain.\n"
                },
                "srv": {
                    "$ref": "#/types/vercel:index/DnsRecordSrv:DnsRecordSrv",
                    "description": "Settings for an SRV record.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID that the domain and DNS records belong to. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                },
                "ttl": {
                    "type": "integer",
                    "description": "The TTL value in seconds. Must be a number between 60 and 2147483647. If unspecified, it will default to 60 seconds.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of DNS record. Available types: `A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `MX`, `NS`, `SRV`, `TXT`.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the DNS record. The format depends on the 'type' property. For an 'A' record, this should be a valid IPv4\naddress. For an 'AAAA' record, this should be an IPv6 address. For 'ALIAS' records, this should be a hostname. For 'CAA'\nrecords, this should specify specify which Certificate Authorities (CAs) are allowed to issue certificates for the\ndomain. For 'CNAME' records, this should be a different domain name. For 'MX' records, this should specify the mail\nserver responsible for accepting messages on behalf of the domain name. For 'TXT' records, this can contain arbitrary\ntext.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DnsRecord resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "A comment explaining what the DNS record is for.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain name, or zone, that the DNS record should be created beneath.\n"
                    },
                    "mxPriority": {
                        "type": "integer",
                        "description": "The priority of the MX record. The priority specifies the sequence that an email server receives emails. A smaller value\nindicates a higher priority.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The subdomain name of the record. This should be an empty string if the rercord is for the root domain.\n"
                    },
                    "srv": {
                        "$ref": "#/types/vercel:index/DnsRecordSrv:DnsRecordSrv",
                        "description": "Settings for an SRV record.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team ID that the domain and DNS records belong to. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                    },
                    "ttl": {
                        "type": "integer",
                        "description": "The TTL value in seconds. Must be a number between 60 and 2147483647. If unspecified, it will default to 60 seconds.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of DNS record. Available types: `A`, `AAAA`, `ALIAS`, `CAA`, `CNAME`, `MX`, `NS`, `SRV`, `TXT`.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the DNS record. The format depends on the 'type' property. For an 'A' record, this should be a valid IPv4\naddress. For an 'AAAA' record, this should be an IPv6 address. For 'ALIAS' records, this should be a hostname. For 'CAA'\nrecords, this should specify specify which Certificate Authorities (CAs) are allowed to issue certificates for the\ndomain. For 'CNAME' records, this should be a different domain name. For 'MX' records, this should specify the mail\nserver responsible for accepting messages on behalf of the domain name. For 'TXT' records, this can contain arbitrary\ntext.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/edgeConfig:EdgeConfig": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name/slug of the Edge Config.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "required": [
                "name",
                "teamId"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": "The name/slug of the Edge Config.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeConfig resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name/slug of the Edge Config.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/edgeConfigItem:EdgeConfigItem": {
            "properties": {
                "edgeConfigId": {
                    "type": "string",
                    "description": "The ID of the Edge Config store.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the key you want to add to or update within your Edge Config.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value you want to assign to the key.\n"
                }
            },
            "required": [
                "edgeConfigId",
                "key",
                "teamId",
                "value"
            ],
            "inputProperties": {
                "edgeConfigId": {
                    "type": "string",
                    "description": "The ID of the Edge Config store.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the key you want to add to or update within your Edge Config.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value you want to assign to the key.\n"
                }
            },
            "requiredInputs": [
                "edgeConfigId",
                "key",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeConfigItem resources.\n",
                "properties": {
                    "edgeConfigId": {
                        "type": "string",
                        "description": "The ID of the Edge Config store.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the key you want to add to or update within your Edge Config.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value you want to assign to the key.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/edgeConfigSchema:EdgeConfigSchema": {
            "properties": {
                "definition": {
                    "type": "string",
                    "description": "A JSON schema that will be used to validate data in the Edge Config.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "required": [
                "definition",
                "teamId"
            ],
            "inputProperties": {
                "definition": {
                    "type": "string",
                    "description": "A JSON schema that will be used to validate data in the Edge Config.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "requiredInputs": [
                "definition"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeConfigSchema resources.\n",
                "properties": {
                    "definition": {
                        "type": "string",
                        "description": "A JSON schema that will be used to validate data in the Edge Config.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/edgeConfigToken:EdgeConfigToken": {
            "properties": {
                "connectionString": {
                    "type": "string",
                    "description": "A connection string is a URL that connects a project to an Edge Config. The variable can be called anything, but our\nEdge Config client SDK will search for process.env.EDGE_CONFIG by default.\n"
                },
                "edgeConfigId": {
                    "type": "string",
                    "description": "The ID of the Edge Config store.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Edge Config Token.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                },
                "token": {
                    "type": "string",
                    "description": "A read access token used for authenticating against the Edge Config's endpoint for high volume, low-latency requests.\n"
                }
            },
            "required": [
                "connectionString",
                "edgeConfigId",
                "label",
                "teamId",
                "token"
            ],
            "inputProperties": {
                "edgeConfigId": {
                    "type": "string",
                    "description": "The ID of the Edge Config store.\n"
                },
                "label": {
                    "type": "string",
                    "description": "The label of the Edge Config Token.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                }
            },
            "requiredInputs": [
                "edgeConfigId",
                "label"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EdgeConfigToken resources.\n",
                "properties": {
                    "connectionString": {
                        "type": "string",
                        "description": "A connection string is a URL that connects a project to an Edge Config. The variable can be called anything, but our\nEdge Config client SDK will search for process.env.EDGE_CONFIG by default.\n"
                    },
                    "edgeConfigId": {
                        "type": "string",
                        "description": "The ID of the Edge Config store.\n"
                    },
                    "label": {
                        "type": "string",
                        "description": "The label of the Edge Config Token.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Edge Config should exist under. Required when configuring a team resource if a default team has\nnot been set in the provider.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "A read access token used for authenticating against the Edge Config's endpoint for high volume, low-latency requests.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/firewallConfig:FirewallConfig": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether firewall is enabled or not.\n"
                },
                "ipRules": {
                    "$ref": "#/types/vercel:index/FirewallConfigIpRules:FirewallConfigIpRules",
                    "description": "IP rules to apply to the project.\n"
                },
                "managedRulesets": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesets:FirewallConfigManagedRulesets",
                    "description": "The managed rulesets that are enabled.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project this configuration belongs to.\n"
                },
                "rules": {
                    "$ref": "#/types/vercel:index/FirewallConfigRules:FirewallConfigRules",
                    "description": "Custom rules to apply to the project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team this project belongs to.\n"
                }
            },
            "required": [
                "enabled",
                "projectId",
                "teamId"
            ],
            "inputProperties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether firewall is enabled or not.\n"
                },
                "ipRules": {
                    "$ref": "#/types/vercel:index/FirewallConfigIpRules:FirewallConfigIpRules",
                    "description": "IP rules to apply to the project.\n"
                },
                "managedRulesets": {
                    "$ref": "#/types/vercel:index/FirewallConfigManagedRulesets:FirewallConfigManagedRulesets",
                    "description": "The managed rulesets that are enabled.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project this configuration belongs to.\n"
                },
                "rules": {
                    "$ref": "#/types/vercel:index/FirewallConfigRules:FirewallConfigRules",
                    "description": "Custom rules to apply to the project\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team this project belongs to.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FirewallConfig resources.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "description": "Whether firewall is enabled or not.\n"
                    },
                    "ipRules": {
                        "$ref": "#/types/vercel:index/FirewallConfigIpRules:FirewallConfigIpRules",
                        "description": "IP rules to apply to the project.\n"
                    },
                    "managedRulesets": {
                        "$ref": "#/types/vercel:index/FirewallConfigManagedRulesets:FirewallConfigManagedRulesets",
                        "description": "The managed rulesets that are enabled.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project this configuration belongs to.\n"
                    },
                    "rules": {
                        "$ref": "#/types/vercel:index/FirewallConfigRules:FirewallConfigRules",
                        "description": "Custom rules to apply to the project\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team this project belongs to.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/logDrain:LogDrain": {
            "properties": {
                "deliveryFormat": {
                    "type": "string",
                    "description": "The format log data should be delivered in. Can be `json` or `ndjson`.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Logs will be sent as POST requests to this URL. The endpoint will be verified, and must return a `200` status code and\nan `x-vercel-verify` header taken from the endpoint_verification data source. The value the `x-vercel-verify` header\nshould be can be read from the `vercel_endpoint_verification_code` data source.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Logs from the selected environments will be forwarded to your webhook. At least one must be present.\n"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom headers to include in requests to the log drain endpoint.\n"
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of project IDs that the log drain should be associated with. Logs from these projects will be sent log events to\nthe specified endpoint. If omitted, logs will be sent for all projects.\n"
                },
                "samplingRate": {
                    "type": "number",
                    "description": "A ratio of logs matching the sampling rate will be sent to your log drain. Should be a value between 0 and 1. If\nunspecified, all logs are sent.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A custom secret to be used for signing log events. You can use this secret to verify that log events are coming from\nVercel and are not tampered with. See\nhttps://vercel.com/docs/observability/log-drains/log-drains-reference#secure-log-drains for full info.\n",
                    "secret": true
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of sources that the log drain should send logs for. Valid values are `static`, `edge`, `external`, `build` and\n`lambda`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Log Drain should exist under. Required when configuring a team resource if a default team has not\nbeen set in the provider.\n"
                }
            },
            "required": [
                "deliveryFormat",
                "endpoint",
                "environments",
                "secret",
                "sources",
                "teamId"
            ],
            "inputProperties": {
                "deliveryFormat": {
                    "type": "string",
                    "description": "The format log data should be delivered in. Can be `json` or `ndjson`.\n"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Logs will be sent as POST requests to this URL. The endpoint will be verified, and must return a `200` status code and\nan `x-vercel-verify` header taken from the endpoint_verification data source. The value the `x-vercel-verify` header\nshould be can be read from the `vercel_endpoint_verification_code` data source.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Logs from the selected environments will be forwarded to your webhook. At least one must be present.\n"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Custom headers to include in requests to the log drain endpoint.\n"
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of project IDs that the log drain should be associated with. Logs from these projects will be sent log events to\nthe specified endpoint. If omitted, logs will be sent for all projects.\n"
                },
                "samplingRate": {
                    "type": "number",
                    "description": "A ratio of logs matching the sampling rate will be sent to your log drain. Should be a value between 0 and 1. If\nunspecified, all logs are sent.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A custom secret to be used for signing log events. You can use this secret to verify that log events are coming from\nVercel and are not tampered with. See\nhttps://vercel.com/docs/observability/log-drains/log-drains-reference#secure-log-drains for full info.\n",
                    "secret": true
                },
                "sources": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of sources that the log drain should send logs for. Valid values are `static`, `edge`, `external`, `build` and\n`lambda`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Log Drain should exist under. Required when configuring a team resource if a default team has not\nbeen set in the provider.\n"
                }
            },
            "requiredInputs": [
                "deliveryFormat",
                "endpoint",
                "environments",
                "sources"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering LogDrain resources.\n",
                "properties": {
                    "deliveryFormat": {
                        "type": "string",
                        "description": "The format log data should be delivered in. Can be `json` or `ndjson`.\n"
                    },
                    "endpoint": {
                        "type": "string",
                        "description": "Logs will be sent as POST requests to this URL. The endpoint will be verified, and must return a `200` status code and\nan `x-vercel-verify` header taken from the endpoint_verification data source. The value the `x-vercel-verify` header\nshould be can be read from the `vercel_endpoint_verification_code` data source.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Logs from the selected environments will be forwarded to your webhook. At least one must be present.\n"
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Custom headers to include in requests to the log drain endpoint.\n"
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of project IDs that the log drain should be associated with. Logs from these projects will be sent log events to\nthe specified endpoint. If omitted, logs will be sent for all projects.\n"
                    },
                    "samplingRate": {
                        "type": "number",
                        "description": "A ratio of logs matching the sampling rate will be sent to your log drain. Should be a value between 0 and 1. If\nunspecified, all logs are sent.\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "A custom secret to be used for signing log events. You can use this secret to verify that log events are coming from\nVercel and are not tampered with. See\nhttps://vercel.com/docs/observability/log-drains/log-drains-reference#secure-log-drains for full info.\n",
                        "secret": true
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of sources that the log drain should send logs for. Valid values are `static`, `edge`, `external`, `build` and\n`lambda`.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Log Drain should exist under. Required when configuring a team resource if a default team has not\nbeen set in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/project:Project": {
            "properties": {
                "autoAssignCustomDomains": {
                    "type": "boolean",
                    "description": "Automatically assign custom production domains after each Production deployment via merge to the production branch or\nVercel CLI deploy with --prod. Defaults to `true`\n"
                },
                "automaticallyExposeSystemEnvironmentVariables": {
                    "type": "boolean",
                    "description": "Vercel provides a set of Environment Variables that are automatically populated by the System, such as the URL of the\nDeployment or the name of the Git branch deployed. To expose them to your Deployments, enable this field\n"
                },
                "buildCommand": {
                    "type": "string",
                    "description": "The build command for this project. If omitted, this value will be automatically detected.\n"
                },
                "customerSuccessCodeVisibility": {
                    "type": "boolean",
                    "description": "Allows Vercel Customer Support to inspect all Deployments' source code in this project to assist with debugging.\n"
                },
                "devCommand": {
                    "type": "string",
                    "description": "The dev command for this project. If omitted, this value will be automatically detected.\n"
                },
                "directoryListing": {
                    "type": "boolean",
                    "description": "If no index file is present within a directory, the directory contents will be displayed.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectEnvironment:ProjectEnvironment"
                    },
                    "description": "A set of Environment Variables that should be configured for the project.\n"
                },
                "framework": {
                    "type": "string",
                    "description": "The framework that is being used for this project. If omitted, no framework is selected.\n"
                },
                "functionFailover": {
                    "type": "boolean",
                    "description": "Automatically failover Serverless Functions to the nearest region. You can customize regions through vercel.json. A new\nDeployment is required for your changes to take effect.\n"
                },
                "gitComments": {
                    "$ref": "#/types/vercel:index/ProjectGitComments:ProjectGitComments",
                    "description": "Configuration for Git Comments.\n"
                },
                "gitForkProtection": {
                    "type": "boolean",
                    "description": "Ensures that pull requests targeting your Git repository must be authorized by a member of your Team before deploying if\nyour Project has Environment Variables or if the pull request includes a change to vercel.json. Defaults to `true`.\n"
                },
                "gitLfs": {
                    "type": "boolean",
                    "description": "Enables Git LFS support. Git LFS replaces large files such as audio samples, videos, datasets, and graphics with text\npointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.\n"
                },
                "gitRepository": {
                    "$ref": "#/types/vercel:index/ProjectGitRepository:ProjectGitRepository",
                    "description": "The Git Repository that will be connected to the project. When this is defined, any pushes to the specified connected\nGit Repository will be automatically deployed. This requires the corresponding Vercel for\n[Github](https://vercel.com/docs/concepts/git/vercel-for-github),\n[Gitlab](https://vercel.com/docs/concepts/git/vercel-for-gitlab) or\n[Bitbucket](https://vercel.com/docs/concepts/git/vercel-for-bitbucket) plugins to be installed.\n"
                },
                "ignoreCommand": {
                    "type": "string",
                    "description": "When a commit is pushed to the Git repository that is connected with your Project, its SHA will determine if a new Build\nhas to be issued. If the SHA was deployed before, no new Build will be issued. You can customize this behavior with a\ncommand that exits with code 1 (new Build needed) or code 0.\n"
                },
                "installCommand": {
                    "type": "string",
                    "description": "The install command for this project. If omitted, this value will be automatically detected.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name for the project.\n"
                },
                "oidcTokenConfig": {
                    "$ref": "#/types/vercel:index/ProjectOidcTokenConfig:ProjectOidcTokenConfig",
                    "description": "Configuration for OpenID Connect (OIDC) tokens.\n"
                },
                "optionsAllowlist": {
                    "$ref": "#/types/vercel:index/ProjectOptionsAllowlist:ProjectOptionsAllowlist",
                    "description": "Disable Deployment Protection for CORS preflight `OPTIONS` requests for a list of paths.\n"
                },
                "outputDirectory": {
                    "type": "string",
                    "description": "The output directory of the project. If omitted, this value will be automatically detected.\n"
                },
                "passwordProtection": {
                    "$ref": "#/types/vercel:index/ProjectPasswordProtection:ProjectPasswordProtection",
                    "description": "Ensures visitors of your Preview Deployments must enter a password in order to gain access.\n"
                },
                "previewComments": {
                    "type": "boolean",
                    "description": "Whether to enable comments on your Preview Deployments. If omitted, comments are controlled at the team level (default\nbehaviour).\n"
                },
                "prioritiseProductionBuilds": {
                    "type": "boolean",
                    "description": "If enabled, builds for the Production environment will be prioritized over Preview environments.\n"
                },
                "protectionBypassForAutomation": {
                    "type": "boolean",
                    "description": "Allow automation services to bypass Deployment Protection on this project when using an HTTP header named\n`x-vercel-protection-bypass` with a value of the `protection_bypass_for_automation_secret` field.\n"
                },
                "protectionBypassForAutomationSecret": {
                    "type": "string",
                    "description": "If `protection_bypass_for_automation` is enabled, optionally set this value to specify a 32 character secret, otherwise\na secret will be generated.\n",
                    "secret": true
                },
                "publicSource": {
                    "type": "boolean",
                    "description": "By default, visitors to the `/_logs` and `/_src` paths of your Production and Preview Deployments must log in with\nVercel (requires being a member of your team) to see the Source, Logs and Deployment Status of your project. Setting\n`public_source` to `true` disables this behaviour, meaning the Source, Logs and Deployment Status can be publicly\nviewed.\n"
                },
                "resourceConfig": {
                    "$ref": "#/types/vercel:index/ProjectResourceConfig:ProjectResourceConfig",
                    "description": "Resource Configuration for the project.\n"
                },
                "rootDirectory": {
                    "type": "string",
                    "description": "The name of a directory or relative path to the source code of your project. If omitted, it will default to the project\nroot.\n"
                },
                "serverlessFunctionRegion": {
                    "type": "string",
                    "description": "The region on Vercel's network to which your Serverless Functions are deployed. It should be close to any data source\nyour Serverless Function might depend on. A new Deployment is required for your changes to take effect. Please see\n[Vercel's documentation](https://vercel.com/docs/concepts/edge-network/regions) for a full list of regions.\n"
                },
                "skewProtection": {
                    "type": "string",
                    "description": "Ensures that outdated clients always fetch the correct version for a given deployment. This value defines how long\nVercel keeps Skew Protection active.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                },
                "trustedIps": {
                    "$ref": "#/types/vercel:index/ProjectTrustedIps:ProjectTrustedIps",
                    "description": "Ensures only visitors from an allowed IP address can access your deployment.\n"
                },
                "vercelAuthentication": {
                    "$ref": "#/types/vercel:index/ProjectVercelAuthentication:ProjectVercelAuthentication",
                    "description": "Ensures visitors to your Preview Deployments are logged into Vercel and have a minimum of Viewer access on your team.\n"
                }
            },
            "required": [
                "autoAssignCustomDomains",
                "automaticallyExposeSystemEnvironmentVariables",
                "customerSuccessCodeVisibility",
                "directoryListing",
                "functionFailover",
                "gitForkProtection",
                "gitLfs",
                "name",
                "oidcTokenConfig",
                "prioritiseProductionBuilds",
                "protectionBypassForAutomationSecret",
                "resourceConfig",
                "serverlessFunctionRegion",
                "teamId",
                "vercelAuthentication"
            ],
            "inputProperties": {
                "autoAssignCustomDomains": {
                    "type": "boolean",
                    "description": "Automatically assign custom production domains after each Production deployment via merge to the production branch or\nVercel CLI deploy with --prod. Defaults to `true`\n"
                },
                "automaticallyExposeSystemEnvironmentVariables": {
                    "type": "boolean",
                    "description": "Vercel provides a set of Environment Variables that are automatically populated by the System, such as the URL of the\nDeployment or the name of the Git branch deployed. To expose them to your Deployments, enable this field\n"
                },
                "buildCommand": {
                    "type": "string",
                    "description": "The build command for this project. If omitted, this value will be automatically detected.\n"
                },
                "customerSuccessCodeVisibility": {
                    "type": "boolean",
                    "description": "Allows Vercel Customer Support to inspect all Deployments' source code in this project to assist with debugging.\n"
                },
                "devCommand": {
                    "type": "string",
                    "description": "The dev command for this project. If omitted, this value will be automatically detected.\n"
                },
                "directoryListing": {
                    "type": "boolean",
                    "description": "If no index file is present within a directory, the directory contents will be displayed.\n"
                },
                "environments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectEnvironment:ProjectEnvironment"
                    },
                    "description": "A set of Environment Variables that should be configured for the project.\n"
                },
                "framework": {
                    "type": "string",
                    "description": "The framework that is being used for this project. If omitted, no framework is selected.\n"
                },
                "functionFailover": {
                    "type": "boolean",
                    "description": "Automatically failover Serverless Functions to the nearest region. You can customize regions through vercel.json. A new\nDeployment is required for your changes to take effect.\n"
                },
                "gitComments": {
                    "$ref": "#/types/vercel:index/ProjectGitComments:ProjectGitComments",
                    "description": "Configuration for Git Comments.\n"
                },
                "gitForkProtection": {
                    "type": "boolean",
                    "description": "Ensures that pull requests targeting your Git repository must be authorized by a member of your Team before deploying if\nyour Project has Environment Variables or if the pull request includes a change to vercel.json. Defaults to `true`.\n"
                },
                "gitLfs": {
                    "type": "boolean",
                    "description": "Enables Git LFS support. Git LFS replaces large files such as audio samples, videos, datasets, and graphics with text\npointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.\n"
                },
                "gitRepository": {
                    "$ref": "#/types/vercel:index/ProjectGitRepository:ProjectGitRepository",
                    "description": "The Git Repository that will be connected to the project. When this is defined, any pushes to the specified connected\nGit Repository will be automatically deployed. This requires the corresponding Vercel for\n[Github](https://vercel.com/docs/concepts/git/vercel-for-github),\n[Gitlab](https://vercel.com/docs/concepts/git/vercel-for-gitlab) or\n[Bitbucket](https://vercel.com/docs/concepts/git/vercel-for-bitbucket) plugins to be installed.\n"
                },
                "ignoreCommand": {
                    "type": "string",
                    "description": "When a commit is pushed to the Git repository that is connected with your Project, its SHA will determine if a new Build\nhas to be issued. If the SHA was deployed before, no new Build will be issued. You can customize this behavior with a\ncommand that exits with code 1 (new Build needed) or code 0.\n"
                },
                "installCommand": {
                    "type": "string",
                    "description": "The install command for this project. If omitted, this value will be automatically detected.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The desired name for the project.\n"
                },
                "oidcTokenConfig": {
                    "$ref": "#/types/vercel:index/ProjectOidcTokenConfig:ProjectOidcTokenConfig",
                    "description": "Configuration for OpenID Connect (OIDC) tokens.\n"
                },
                "optionsAllowlist": {
                    "$ref": "#/types/vercel:index/ProjectOptionsAllowlist:ProjectOptionsAllowlist",
                    "description": "Disable Deployment Protection for CORS preflight `OPTIONS` requests for a list of paths.\n"
                },
                "outputDirectory": {
                    "type": "string",
                    "description": "The output directory of the project. If omitted, this value will be automatically detected.\n"
                },
                "passwordProtection": {
                    "$ref": "#/types/vercel:index/ProjectPasswordProtection:ProjectPasswordProtection",
                    "description": "Ensures visitors of your Preview Deployments must enter a password in order to gain access.\n"
                },
                "previewComments": {
                    "type": "boolean",
                    "description": "Whether to enable comments on your Preview Deployments. If omitted, comments are controlled at the team level (default\nbehaviour).\n"
                },
                "prioritiseProductionBuilds": {
                    "type": "boolean",
                    "description": "If enabled, builds for the Production environment will be prioritized over Preview environments.\n"
                },
                "protectionBypassForAutomation": {
                    "type": "boolean",
                    "description": "Allow automation services to bypass Deployment Protection on this project when using an HTTP header named\n`x-vercel-protection-bypass` with a value of the `protection_bypass_for_automation_secret` field.\n"
                },
                "protectionBypassForAutomationSecret": {
                    "type": "string",
                    "description": "If `protection_bypass_for_automation` is enabled, optionally set this value to specify a 32 character secret, otherwise\na secret will be generated.\n",
                    "secret": true
                },
                "publicSource": {
                    "type": "boolean",
                    "description": "By default, visitors to the `/_logs` and `/_src` paths of your Production and Preview Deployments must log in with\nVercel (requires being a member of your team) to see the Source, Logs and Deployment Status of your project. Setting\n`public_source` to `true` disables this behaviour, meaning the Source, Logs and Deployment Status can be publicly\nviewed.\n"
                },
                "resourceConfig": {
                    "$ref": "#/types/vercel:index/ProjectResourceConfig:ProjectResourceConfig",
                    "description": "Resource Configuration for the project.\n"
                },
                "rootDirectory": {
                    "type": "string",
                    "description": "The name of a directory or relative path to the source code of your project. If omitted, it will default to the project\nroot.\n"
                },
                "serverlessFunctionRegion": {
                    "type": "string",
                    "description": "The region on Vercel's network to which your Serverless Functions are deployed. It should be close to any data source\nyour Serverless Function might depend on. A new Deployment is required for your changes to take effect. Please see\n[Vercel's documentation](https://vercel.com/docs/concepts/edge-network/regions) for a full list of regions.\n"
                },
                "skewProtection": {
                    "type": "string",
                    "description": "Ensures that outdated clients always fetch the correct version for a given deployment. This value defines how long\nVercel keeps Skew Protection active.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                },
                "trustedIps": {
                    "$ref": "#/types/vercel:index/ProjectTrustedIps:ProjectTrustedIps",
                    "description": "Ensures only visitors from an allowed IP address can access your deployment.\n"
                },
                "vercelAuthentication": {
                    "$ref": "#/types/vercel:index/ProjectVercelAuthentication:ProjectVercelAuthentication",
                    "description": "Ensures visitors to your Preview Deployments are logged into Vercel and have a minimum of Viewer access on your team.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "autoAssignCustomDomains": {
                        "type": "boolean",
                        "description": "Automatically assign custom production domains after each Production deployment via merge to the production branch or\nVercel CLI deploy with --prod. Defaults to `true`\n"
                    },
                    "automaticallyExposeSystemEnvironmentVariables": {
                        "type": "boolean",
                        "description": "Vercel provides a set of Environment Variables that are automatically populated by the System, such as the URL of the\nDeployment or the name of the Git branch deployed. To expose them to your Deployments, enable this field\n"
                    },
                    "buildCommand": {
                        "type": "string",
                        "description": "The build command for this project. If omitted, this value will be automatically detected.\n"
                    },
                    "customerSuccessCodeVisibility": {
                        "type": "boolean",
                        "description": "Allows Vercel Customer Support to inspect all Deployments' source code in this project to assist with debugging.\n"
                    },
                    "devCommand": {
                        "type": "string",
                        "description": "The dev command for this project. If omitted, this value will be automatically detected.\n"
                    },
                    "directoryListing": {
                        "type": "boolean",
                        "description": "If no index file is present within a directory, the directory contents will be displayed.\n"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/vercel:index/ProjectEnvironment:ProjectEnvironment"
                        },
                        "description": "A set of Environment Variables that should be configured for the project.\n"
                    },
                    "framework": {
                        "type": "string",
                        "description": "The framework that is being used for this project. If omitted, no framework is selected.\n"
                    },
                    "functionFailover": {
                        "type": "boolean",
                        "description": "Automatically failover Serverless Functions to the nearest region. You can customize regions through vercel.json. A new\nDeployment is required for your changes to take effect.\n"
                    },
                    "gitComments": {
                        "$ref": "#/types/vercel:index/ProjectGitComments:ProjectGitComments",
                        "description": "Configuration for Git Comments.\n"
                    },
                    "gitForkProtection": {
                        "type": "boolean",
                        "description": "Ensures that pull requests targeting your Git repository must be authorized by a member of your Team before deploying if\nyour Project has Environment Variables or if the pull request includes a change to vercel.json. Defaults to `true`.\n"
                    },
                    "gitLfs": {
                        "type": "boolean",
                        "description": "Enables Git LFS support. Git LFS replaces large files such as audio samples, videos, datasets, and graphics with text\npointers inside Git, while storing the file contents on a remote server like GitHub.com or GitHub Enterprise.\n"
                    },
                    "gitRepository": {
                        "$ref": "#/types/vercel:index/ProjectGitRepository:ProjectGitRepository",
                        "description": "The Git Repository that will be connected to the project. When this is defined, any pushes to the specified connected\nGit Repository will be automatically deployed. This requires the corresponding Vercel for\n[Github](https://vercel.com/docs/concepts/git/vercel-for-github),\n[Gitlab](https://vercel.com/docs/concepts/git/vercel-for-gitlab) or\n[Bitbucket](https://vercel.com/docs/concepts/git/vercel-for-bitbucket) plugins to be installed.\n"
                    },
                    "ignoreCommand": {
                        "type": "string",
                        "description": "When a commit is pushed to the Git repository that is connected with your Project, its SHA will determine if a new Build\nhas to be issued. If the SHA was deployed before, no new Build will be issued. You can customize this behavior with a\ncommand that exits with code 1 (new Build needed) or code 0.\n"
                    },
                    "installCommand": {
                        "type": "string",
                        "description": "The install command for this project. If omitted, this value will be automatically detected.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The desired name for the project.\n"
                    },
                    "oidcTokenConfig": {
                        "$ref": "#/types/vercel:index/ProjectOidcTokenConfig:ProjectOidcTokenConfig",
                        "description": "Configuration for OpenID Connect (OIDC) tokens.\n"
                    },
                    "optionsAllowlist": {
                        "$ref": "#/types/vercel:index/ProjectOptionsAllowlist:ProjectOptionsAllowlist",
                        "description": "Disable Deployment Protection for CORS preflight `OPTIONS` requests for a list of paths.\n"
                    },
                    "outputDirectory": {
                        "type": "string",
                        "description": "The output directory of the project. If omitted, this value will be automatically detected.\n"
                    },
                    "passwordProtection": {
                        "$ref": "#/types/vercel:index/ProjectPasswordProtection:ProjectPasswordProtection",
                        "description": "Ensures visitors of your Preview Deployments must enter a password in order to gain access.\n"
                    },
                    "previewComments": {
                        "type": "boolean",
                        "description": "Whether to enable comments on your Preview Deployments. If omitted, comments are controlled at the team level (default\nbehaviour).\n"
                    },
                    "prioritiseProductionBuilds": {
                        "type": "boolean",
                        "description": "If enabled, builds for the Production environment will be prioritized over Preview environments.\n"
                    },
                    "protectionBypassForAutomation": {
                        "type": "boolean",
                        "description": "Allow automation services to bypass Deployment Protection on this project when using an HTTP header named\n`x-vercel-protection-bypass` with a value of the `protection_bypass_for_automation_secret` field.\n"
                    },
                    "protectionBypassForAutomationSecret": {
                        "type": "string",
                        "description": "If `protection_bypass_for_automation` is enabled, optionally set this value to specify a 32 character secret, otherwise\na secret will be generated.\n",
                        "secret": true
                    },
                    "publicSource": {
                        "type": "boolean",
                        "description": "By default, visitors to the `/_logs` and `/_src` paths of your Production and Preview Deployments must log in with\nVercel (requires being a member of your team) to see the Source, Logs and Deployment Status of your project. Setting\n`public_source` to `true` disables this behaviour, meaning the Source, Logs and Deployment Status can be publicly\nviewed.\n"
                    },
                    "resourceConfig": {
                        "$ref": "#/types/vercel:index/ProjectResourceConfig:ProjectResourceConfig",
                        "description": "Resource Configuration for the project.\n"
                    },
                    "rootDirectory": {
                        "type": "string",
                        "description": "The name of a directory or relative path to the source code of your project. If omitted, it will default to the project\nroot.\n"
                    },
                    "serverlessFunctionRegion": {
                        "type": "string",
                        "description": "The region on Vercel's network to which your Serverless Functions are deployed. It should be close to any data source\nyour Serverless Function might depend on. A new Deployment is required for your changes to take effect. Please see\n[Vercel's documentation](https://vercel.com/docs/concepts/edge-network/regions) for a full list of regions.\n"
                    },
                    "skewProtection": {
                        "type": "string",
                        "description": "Ensures that outdated clients always fetch the correct version for a given deployment. This value defines how long\nVercel keeps Skew Protection active.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                    },
                    "trustedIps": {
                        "$ref": "#/types/vercel:index/ProjectTrustedIps:ProjectTrustedIps",
                        "description": "Ensures only visitors from an allowed IP address can access your deployment.\n"
                    },
                    "vercelAuthentication": {
                        "$ref": "#/types/vercel:index/ProjectVercelAuthentication:ProjectVercelAuthentication",
                        "description": "Ensures visitors to your Preview Deployments are logged into Vercel and have a minimum of Viewer access on your team.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/projectDeploymentRetention:ProjectDeploymentRetention": {
            "properties": {
                "expirationCanceled": {
                    "type": "string",
                    "description": "The retention period for canceled deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "expirationErrored": {
                    "type": "string",
                    "description": "The retention period for errored deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "expirationPreview": {
                    "type": "string",
                    "description": "The retention period for preview deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "expirationProduction": {
                    "type": "string",
                    "description": "The retention period for production deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Project for the retention policy\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team.\n"
                }
            },
            "required": [
                "expirationCanceled",
                "expirationErrored",
                "expirationPreview",
                "expirationProduction",
                "projectId",
                "teamId"
            ],
            "inputProperties": {
                "expirationCanceled": {
                    "type": "string",
                    "description": "The retention period for canceled deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "expirationErrored": {
                    "type": "string",
                    "description": "The retention period for errored deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "expirationPreview": {
                    "type": "string",
                    "description": "The retention period for preview deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "expirationProduction": {
                    "type": "string",
                    "description": "The retention period for production deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Project for the retention policy\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team.\n"
                }
            },
            "requiredInputs": [
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectDeploymentRetention resources.\n",
                "properties": {
                    "expirationCanceled": {
                        "type": "string",
                        "description": "The retention period for canceled deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                    },
                    "expirationErrored": {
                        "type": "string",
                        "description": "The retention period for errored deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                    },
                    "expirationPreview": {
                        "type": "string",
                        "description": "The retention period for preview deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                    },
                    "expirationProduction": {
                        "type": "string",
                        "description": "The retention period for production deployments. Should be one of '1m', '2m', '3m', '6m', '1y', 'unlimited'.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the Project for the retention policy\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the Vercel team.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/projectDomain:ProjectDomain": {
            "properties": {
                "customEnvironmentId": {
                    "type": "string",
                    "description": "The name of the Custom Environment to link to the Project Domain. Deployments from this custom environment will be\nassigned the domain name.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to associate with the project.\n"
                },
                "gitBranch": {
                    "type": "string",
                    "description": "Git branch to link to the project domain. Deployments from this git branch will be assigned the domain name.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID to add the deployment to.\n"
                },
                "redirect": {
                    "type": "string",
                    "description": "The domain name that serves as a target destination for redirects.\n"
                },
                "redirectStatusCode": {
                    "type": "integer",
                    "description": "The HTTP status code to use when serving as a redirect.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the project exists under. Required when configuring a team resource if a default team has not been\nset in the provider.\n"
                }
            },
            "required": [
                "domain",
                "projectId",
                "teamId"
            ],
            "inputProperties": {
                "customEnvironmentId": {
                    "type": "string",
                    "description": "The name of the Custom Environment to link to the Project Domain. Deployments from this custom environment will be\nassigned the domain name.\n"
                },
                "domain": {
                    "type": "string",
                    "description": "The domain name to associate with the project.\n"
                },
                "gitBranch": {
                    "type": "string",
                    "description": "Git branch to link to the project domain. Deployments from this git branch will be assigned the domain name.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The project ID to add the deployment to.\n"
                },
                "redirect": {
                    "type": "string",
                    "description": "The domain name that serves as a target destination for redirects.\n"
                },
                "redirectStatusCode": {
                    "type": "integer",
                    "description": "The HTTP status code to use when serving as a redirect.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the project exists under. Required when configuring a team resource if a default team has not been\nset in the provider.\n"
                }
            },
            "requiredInputs": [
                "domain",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectDomain resources.\n",
                "properties": {
                    "customEnvironmentId": {
                        "type": "string",
                        "description": "The name of the Custom Environment to link to the Project Domain. Deployments from this custom environment will be\nassigned the domain name.\n"
                    },
                    "domain": {
                        "type": "string",
                        "description": "The domain name to associate with the project.\n"
                    },
                    "gitBranch": {
                        "type": "string",
                        "description": "Git branch to link to the project domain. Deployments from this git branch will be assigned the domain name.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The project ID to add the deployment to.\n"
                    },
                    "redirect": {
                        "type": "string",
                        "description": "The domain name that serves as a target destination for redirects.\n"
                    },
                    "redirectStatusCode": {
                        "type": "integer",
                        "description": "The HTTP status code to use when serving as a redirect.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the project exists under. Required when configuring a team resource if a default team has not been\nset in the provider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/projectEnvironmentVariable:ProjectEnvironmentVariable": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the environment variable is for.\n"
                },
                "customEnvironmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or\n`custom_environment_ids` must be set.\n"
                },
                "gitBranch": {
                    "type": "string",
                    "description": "The git branch of the Environment Variable.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the Environment Variable.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Vercel project.\n"
                },
                "sensitive": {
                    "type": "boolean",
                    "description": "Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable\npolicy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`,\nor `development`. At least one of `target` or `custom_environment_ids` must be set.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team.Required when configuring a team resource if a default team has not been set in the provider.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the Environment Variable.\n",
                    "secret": true
                }
            },
            "required": [
                "comment",
                "customEnvironmentIds",
                "key",
                "projectId",
                "sensitive",
                "targets",
                "teamId",
                "value"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the environment variable is for.\n"
                },
                "customEnvironmentIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or\n`custom_environment_ids` must be set.\n"
                },
                "gitBranch": {
                    "type": "string",
                    "description": "The git branch of the Environment Variable.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the Environment Variable.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Vercel project.\n"
                },
                "sensitive": {
                    "type": "boolean",
                    "description": "Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable\npolicy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`,\nor `development`. At least one of `target` or `custom_environment_ids` must be set.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team.Required when configuring a team resource if a default team has not been set in the provider.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the Environment Variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "key",
                "projectId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectEnvironmentVariable resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "A comment explaining what the environment variable is for.\n"
                    },
                    "customEnvironmentIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The IDs of Custom Environments that the Environment Variable should be present on. At least one of `target` or\n`custom_environment_ids` must be set.\n"
                    },
                    "gitBranch": {
                        "type": "string",
                        "description": "The git branch of the Environment Variable.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the Environment Variable.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the Vercel project.\n"
                    },
                    "sensitive": {
                        "type": "boolean",
                        "description": "Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable\npolicy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))\n"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`,\nor `development`. At least one of `target` or `custom_environment_ids` must be set.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the Vercel team.Required when configuring a team resource if a default team has not been set in the provider.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the Environment Variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/projectEnvironmentVariables:ProjectEnvironmentVariables": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Vercel project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectEnvironmentVariablesVariable:ProjectEnvironmentVariablesVariable"
                    },
                    "description": "A set of Environment Variables that should be configured for the project.\n"
                }
            },
            "required": [
                "projectId",
                "teamId",
                "variables"
            ],
            "inputProperties": {
                "projectId": {
                    "type": "string",
                    "description": "The ID of the Vercel project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectEnvironmentVariablesVariable:ProjectEnvironmentVariablesVariable"
                    },
                    "description": "A set of Environment Variables that should be configured for the project.\n"
                }
            },
            "requiredInputs": [
                "projectId",
                "variables"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectEnvironmentVariables resources.\n",
                "properties": {
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the Vercel project.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the Vercel team. Required when configuring a team resource if a default team has not been set in the provider.\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/vercel:index/ProjectEnvironmentVariablesVariable:ProjectEnvironmentVariablesVariable"
                        },
                        "description": "A set of Environment Variables that should be configured for the project.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/projectMembers:ProjectMembers": {
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectMembersMember:ProjectMembersMember"
                    },
                    "description": "The set of members to manage for this project.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the existing Vercel Project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                }
            },
            "required": [
                "members",
                "projectId",
                "teamId"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/ProjectMembersMember:ProjectMembersMember"
                    },
                    "description": "The set of members to manage for this project.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the existing Vercel Project.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                }
            },
            "requiredInputs": [
                "members",
                "projectId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProjectMembers resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/vercel:index/ProjectMembersMember:ProjectMembersMember"
                        },
                        "description": "The set of members to manage for this project.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the existing Vercel Project.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The team ID to add the project to. Required when configuring a team resource if a default team has not been set in the\nprovider.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/sharedEnvironmentVariable:SharedEnvironmentVariable": {
            "properties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the environment variable is for.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the Environment Variable.\n"
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the Vercel project.\n"
                },
                "sensitive": {
                    "type": "boolean",
                    "description": "Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable\npolicy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`,\nor `development`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team. Shared environment variables require a team.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the Environment Variable.\n",
                    "secret": true
                }
            },
            "required": [
                "comment",
                "key",
                "projectIds",
                "sensitive",
                "targets",
                "teamId",
                "value"
            ],
            "inputProperties": {
                "comment": {
                    "type": "string",
                    "description": "A comment explaining what the environment variable is for.\n"
                },
                "key": {
                    "type": "string",
                    "description": "The name of the Environment Variable.\n"
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ID of the Vercel project.\n"
                },
                "sensitive": {
                    "type": "boolean",
                    "description": "Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable\npolicy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))\n"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`,\nor `development`.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the Vercel team. Shared environment variables require a team.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the Environment Variable.\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "key",
                "projectIds",
                "targets",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SharedEnvironmentVariable resources.\n",
                "properties": {
                    "comment": {
                        "type": "string",
                        "description": "A comment explaining what the environment variable is for.\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "The name of the Environment Variable.\n"
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ID of the Vercel project.\n"
                    },
                    "sensitive": {
                        "type": "boolean",
                        "description": "Whether the Environment Variable is sensitive or not. (May be affected by a [team-wide environment variable\npolicy](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables#environment-variables-policy))\n"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The environments that the Environment Variable should be present on. Valid targets are either `production`, `preview`,\nor `development`.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the Vercel team. Shared environment variables require a team.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the Environment Variable.\n",
                        "secret": true
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/teamConfig:TeamConfig": {
            "properties": {
                "avatar": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The `avatar` should be a the 'file' attribute from a vercel.getFile data source.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the team.\n"
                },
                "emailDomain": {
                    "type": "string",
                    "description": "Hostname that'll be matched with emails on sign-up to automatically join the Team.\n"
                },
                "enablePreviewFeedback": {
                    "type": "string",
                    "description": "Enables the Vercel Toolbar on your preview deployments: one of on, off or default.\n"
                },
                "enableProductionFeedback": {
                    "type": "string",
                    "description": "Enables the Vercel Toolbar on your production deployments: one of on, off or default.\n"
                },
                "hideIpAddresses": {
                    "type": "boolean",
                    "description": "Indicates if ip addresses should be accessible in o11y tooling.\n"
                },
                "hideIpAddressesInLogDrains": {
                    "type": "boolean",
                    "description": "Indicates if ip addresses should be accessible in log drains.\n"
                },
                "inviteCode": {
                    "type": "string",
                    "description": "A code that can be used to join this team. Only visible to Team owners.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team.\n"
                },
                "previewDeploymentSuffix": {
                    "type": "string",
                    "description": "The hostname that is used as the preview deployment suffix.\n"
                },
                "remoteCaching": {
                    "$ref": "#/types/vercel:index/TeamConfigRemoteCaching:TeamConfigRemoteCaching",
                    "description": "Configuration for Remote Caching.\n"
                },
                "saml": {
                    "$ref": "#/types/vercel:index/TeamConfigSaml:TeamConfigSaml",
                    "description": "Configuration for SAML authentication.\n"
                },
                "sensitiveEnvironmentVariablePolicy": {
                    "type": "string",
                    "description": "Ensures that all environment variables created by members of this team will be created as Sensitive Environment\nVariables which can only be decrypted by Vercel's deployment system.: one of on, off or default.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the team. Will be used in the URL of the team's dashboard.\n"
                }
            },
            "required": [
                "description",
                "emailDomain",
                "enablePreviewFeedback",
                "enableProductionFeedback",
                "hideIpAddresses",
                "hideIpAddressesInLogDrains",
                "inviteCode",
                "name",
                "previewDeploymentSuffix",
                "remoteCaching",
                "saml",
                "sensitiveEnvironmentVariablePolicy",
                "slug"
            ],
            "inputProperties": {
                "avatar": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The `avatar` should be a the 'file' attribute from a vercel.getFile data source.\n"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the team.\n"
                },
                "emailDomain": {
                    "type": "string",
                    "description": "Hostname that'll be matched with emails on sign-up to automatically join the Team.\n"
                },
                "enablePreviewFeedback": {
                    "type": "string",
                    "description": "Enables the Vercel Toolbar on your preview deployments: one of on, off or default.\n"
                },
                "enableProductionFeedback": {
                    "type": "string",
                    "description": "Enables the Vercel Toolbar on your production deployments: one of on, off or default.\n"
                },
                "hideIpAddresses": {
                    "type": "boolean",
                    "description": "Indicates if ip addresses should be accessible in o11y tooling.\n"
                },
                "hideIpAddressesInLogDrains": {
                    "type": "boolean",
                    "description": "Indicates if ip addresses should be accessible in log drains.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the team.\n"
                },
                "previewDeploymentSuffix": {
                    "type": "string",
                    "description": "The hostname that is used as the preview deployment suffix.\n"
                },
                "remoteCaching": {
                    "$ref": "#/types/vercel:index/TeamConfigRemoteCaching:TeamConfigRemoteCaching",
                    "description": "Configuration for Remote Caching.\n"
                },
                "saml": {
                    "$ref": "#/types/vercel:index/TeamConfigSaml:TeamConfigSaml",
                    "description": "Configuration for SAML authentication.\n"
                },
                "sensitiveEnvironmentVariablePolicy": {
                    "type": "string",
                    "description": "Ensures that all environment variables created by members of this team will be created as Sensitive Environment\nVariables which can only be decrypted by Vercel's deployment system.: one of on, off or default.\n"
                },
                "slug": {
                    "type": "string",
                    "description": "The slug of the team. Will be used in the URL of the team's dashboard.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamConfig resources.\n",
                "properties": {
                    "avatar": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The `avatar` should be a the 'file' attribute from a vercel.getFile data source.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "A description of the team.\n"
                    },
                    "emailDomain": {
                        "type": "string",
                        "description": "Hostname that'll be matched with emails on sign-up to automatically join the Team.\n"
                    },
                    "enablePreviewFeedback": {
                        "type": "string",
                        "description": "Enables the Vercel Toolbar on your preview deployments: one of on, off or default.\n"
                    },
                    "enableProductionFeedback": {
                        "type": "string",
                        "description": "Enables the Vercel Toolbar on your production deployments: one of on, off or default.\n"
                    },
                    "hideIpAddresses": {
                        "type": "boolean",
                        "description": "Indicates if ip addresses should be accessible in o11y tooling.\n"
                    },
                    "hideIpAddressesInLogDrains": {
                        "type": "boolean",
                        "description": "Indicates if ip addresses should be accessible in log drains.\n"
                    },
                    "inviteCode": {
                        "type": "string",
                        "description": "A code that can be used to join this team. Only visible to Team owners.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the team.\n"
                    },
                    "previewDeploymentSuffix": {
                        "type": "string",
                        "description": "The hostname that is used as the preview deployment suffix.\n"
                    },
                    "remoteCaching": {
                        "$ref": "#/types/vercel:index/TeamConfigRemoteCaching:TeamConfigRemoteCaching",
                        "description": "Configuration for Remote Caching.\n"
                    },
                    "saml": {
                        "$ref": "#/types/vercel:index/TeamConfigSaml:TeamConfigSaml",
                        "description": "Configuration for SAML authentication.\n"
                    },
                    "sensitiveEnvironmentVariablePolicy": {
                        "type": "string",
                        "description": "Ensures that all environment variables created by members of this team will be created as Sensitive Environment\nVariables which can only be decrypted by Vercel's deployment system.: one of on, off or default.\n"
                    },
                    "slug": {
                        "type": "string",
                        "description": "The slug of the team. Will be used in the URL of the team's dashboard.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/teamMember:TeamMember": {
            "properties": {
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be\nspecified. A set of access groups IDs that the user should be granted access to.\n"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/TeamMemberProject:TeamMemberProject"
                    },
                    "description": "If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be\nspecified. A set of projects that the user should be granted access to, along with their role in each project.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that the user should have in the project. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or\n'CONTRIBUTOR'. Depending on your Team's plan, some of these roles may be unavailable.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the existing Vercel Team.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user to add to the team.\n"
                }
            },
            "required": [
                "accessGroups",
                "projects",
                "role",
                "teamId",
                "userId"
            ],
            "inputProperties": {
                "accessGroups": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be\nspecified. A set of access groups IDs that the user should be granted access to.\n"
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/vercel:index/TeamMemberProject:TeamMemberProject"
                    },
                    "description": "If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be\nspecified. A set of projects that the user should be granted access to, along with their role in each project.\n"
                },
                "role": {
                    "type": "string",
                    "description": "The role that the user should have in the project. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or\n'CONTRIBUTOR'. Depending on your Team's plan, some of these roles may be unavailable.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the existing Vercel Team.\n"
                },
                "userId": {
                    "type": "string",
                    "description": "The ID of the user to add to the team.\n"
                }
            },
            "requiredInputs": [
                "role",
                "teamId",
                "userId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TeamMember resources.\n",
                "properties": {
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be\nspecified. A set of access groups IDs that the user should be granted access to.\n"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/vercel:index/TeamMemberProject:TeamMemberProject"
                        },
                        "description": "If access groups are enabled on the team, and the user is a CONTRIBUTOR, `projects`, `access_groups` or both must be\nspecified. A set of projects that the user should be granted access to, along with their role in each project.\n"
                    },
                    "role": {
                        "type": "string",
                        "description": "The role that the user should have in the project. One of 'MEMBER', 'OWNER', 'VIEWER', 'DEVELOPER', 'BILLING' or\n'CONTRIBUTOR'. Depending on your Team's plan, some of these roles may be unavailable.\n"
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the existing Vercel Team.\n"
                    },
                    "userId": {
                        "type": "string",
                        "description": "The ID of the user to add to the team.\n"
                    }
                },
                "type": "object"
            }
        },
        "vercel:index/webhook:Webhook": {
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Webhooks events will be sent as POST requests to this URL.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the events the webhook will listen to. At least one must be present.\n"
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of project IDs that the webhook should be associated with. These projects should send events to the specified\nendpoint.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "A secret value which will be provided in the `x-vercel-signature` header and can be used to verify the authenticity of\nthe webhook. See https://vercel.com/docs/observability/webhooks-overview/webhooks-api#securing-webhooks for further\ndetails.\n",
                    "secret": true
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Webhook should exist under. Required when configuring a team resource if a default team has not\nbeen set in the provider.\n"
                }
            },
            "required": [
                "endpoint",
                "events",
                "secret",
                "teamId"
            ],
            "inputProperties": {
                "endpoint": {
                    "type": "string",
                    "description": "Webhooks events will be sent as POST requests to this URL.\n"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of the events the webhook will listen to. At least one must be present.\n"
                },
                "projectIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of project IDs that the webhook should be associated with. These projects should send events to the specified\nendpoint.\n"
                },
                "teamId": {
                    "type": "string",
                    "description": "The ID of the team the Webhook should exist under. Required when configuring a team resource if a default team has not\nbeen set in the provider.\n"
                }
            },
            "requiredInputs": [
                "endpoint",
                "events"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Webhook resources.\n",
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "description": "Webhooks events will be sent as POST requests to this URL.\n"
                    },
                    "events": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of the events the webhook will listen to. At least one must be present.\n"
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of project IDs that the webhook should be associated with. These projects should send events to the specified\nendpoint.\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "A secret value which will be provided in the `x-vercel-signature` header and can be used to verify the authenticity of\nthe webhook. See https://vercel.com/docs/observability/webhooks-overview/webhooks-api#securing-webhooks for further\ndetails.\n",
                        "secret": true
                    },
                    "teamId": {
                        "type": "string",
                        "description": "The ID of the team the Webhook should exist under. Required when configuring a team resource if a default team has not\nbeen set in the provider.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "vercel:index/getAccessGroup:getAccessGroup": {
            "inputs": {
                "description": "A collection of arguments for invoking getAccessGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessGroup.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "teamId"
                ]
            }
        },
        "vercel:index/getAccessGroupProject:getAccessGroupProject": {
            "inputs": {
                "description": "A collection of arguments for invoking getAccessGroupProject.\n",
                "properties": {
                    "accessGroupId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessGroupId",
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccessGroupProject.\n",
                "properties": {
                    "accessGroupId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessGroupId",
                    "projectId",
                    "role",
                    "teamId",
                    "id"
                ]
            }
        },
        "vercel:index/getAlias:getAlias": {
            "inputs": {
                "description": "A collection of arguments for invoking getAlias.\n",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "alias"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAlias.\n",
                "properties": {
                    "alias": {
                        "type": "string"
                    },
                    "deploymentId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "alias",
                    "deploymentId",
                    "id",
                    "teamId"
                ]
            }
        },
        "vercel:index/getAttackChallengeMode:getAttackChallengeMode": {
            "inputs": {
                "description": "A collection of arguments for invoking getAttackChallengeMode.\n",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAttackChallengeMode.\n",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "enabled",
                    "id",
                    "projectId",
                    "teamId"
                ]
            }
        },
        "vercel:index/getCustomEnvironment:getCustomEnvironment": {
            "inputs": {
                "description": "A collection of arguments for invoking getCustomEnvironment.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCustomEnvironment.\n",
                "properties": {
                    "branchTracking": {
                        "$ref": "#/types/vercel:index/getCustomEnvironmentBranchTracking:getCustomEnvironmentBranchTracking"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "branchTracking",
                    "description",
                    "id",
                    "name",
                    "projectId",
                    "teamId"
                ]
            }
        },
        "vercel:index/getDeployment:getDeployment": {
            "inputs": {
                "description": "A collection of arguments for invoking getDeployment.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDeployment.\n",
                "properties": {
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "production": {
                        "type": "boolean"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "ref": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "domains",
                    "id",
                    "production",
                    "projectId",
                    "ref",
                    "teamId",
                    "url"
                ]
            }
        },
        "vercel:index/getEdgeConfig:getEdgeConfig": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeConfig.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeConfig.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "teamId"
                ]
            }
        },
        "vercel:index/getEdgeConfigItem:getEdgeConfigItem": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeConfigItem.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "key"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeConfigItem.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "key",
                    "teamId",
                    "value"
                ]
            }
        },
        "vercel:index/getEdgeConfigSchema:getEdgeConfigSchema": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeConfigSchema.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeConfigSchema.\n",
                "properties": {
                    "definition": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "definition",
                    "id",
                    "teamId"
                ]
            }
        },
        "vercel:index/getEdgeConfigToken:getEdgeConfigToken": {
            "inputs": {
                "description": "A collection of arguments for invoking getEdgeConfigToken.\n",
                "properties": {
                    "edgeConfigId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "edgeConfigId",
                    "token"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getEdgeConfigToken.\n",
                "properties": {
                    "connectionString": {
                        "type": "string"
                    },
                    "edgeConfigId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "connectionString",
                    "edgeConfigId",
                    "id",
                    "label",
                    "teamId",
                    "token"
                ]
            }
        },
        "vercel:index/getEndpointVerification:getEndpointVerification": {
            "inputs": {
                "description": "A collection of arguments for invoking getEndpointVerification.\n",
                "properties": {
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getEndpointVerification.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "verificationCode": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "teamId",
                    "verificationCode"
                ]
            }
        },
        "vercel:index/getFile:getFile": {
            "inputs": {
                "description": "A collection of arguments for invoking getFile.\n",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "path"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getFile.\n",
                "properties": {
                    "file": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "file",
                    "id",
                    "path"
                ]
            }
        },
        "vercel:index/getLogDrain:getLogDrain": {
            "inputs": {
                "description": "A collection of arguments for invoking getLogDrain.\n",
                "properties": {
                    "endpoint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "endpoint",
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getLogDrain.\n",
                "properties": {
                    "deliveryFormat": {
                        "type": "string"
                    },
                    "endpoint": {
                        "type": "string"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "headers": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "samplingRate": {
                        "type": "number"
                    },
                    "sources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "deliveryFormat",
                    "endpoint",
                    "environments",
                    "headers",
                    "id",
                    "projectIds",
                    "samplingRate",
                    "sources",
                    "teamId"
                ]
            }
        },
        "vercel:index/getPrebuiltProject:getPrebuiltProject": {
            "inputs": {
                "description": "A collection of arguments for invoking getPrebuiltProject.\n",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "path"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPrebuiltProject.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "output": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "output",
                    "path"
                ]
            }
        },
        "vercel:index/getProject:getProject": {
            "inputs": {
                "description": "A collection of arguments for invoking getProject.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProject.\n",
                "properties": {
                    "autoAssignCustomDomains": {
                        "type": "boolean"
                    },
                    "automaticallyExposeSystemEnvironmentVariables": {
                        "type": "boolean"
                    },
                    "buildCommand": {
                        "type": "string"
                    },
                    "customerSuccessCodeVisibility": {
                        "type": "boolean"
                    },
                    "devCommand": {
                        "type": "string"
                    },
                    "directoryListing": {
                        "type": "boolean"
                    },
                    "environments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/vercel:index/getProjectEnvironment:getProjectEnvironment"
                        }
                    },
                    "framework": {
                        "type": "string"
                    },
                    "functionFailover": {
                        "type": "boolean"
                    },
                    "gitComments": {
                        "$ref": "#/types/vercel:index/getProjectGitComments:getProjectGitComments"
                    },
                    "gitForkProtection": {
                        "type": "boolean"
                    },
                    "gitLfs": {
                        "type": "boolean"
                    },
                    "gitRepository": {
                        "$ref": "#/types/vercel:index/getProjectGitRepository:getProjectGitRepository"
                    },
                    "id": {
                        "type": "string"
                    },
                    "ignoreCommand": {
                        "type": "string"
                    },
                    "installCommand": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "oidcTokenConfig": {
                        "$ref": "#/types/vercel:index/getProjectOidcTokenConfig:getProjectOidcTokenConfig"
                    },
                    "optionsAllowlist": {
                        "$ref": "#/types/vercel:index/getProjectOptionsAllowlist:getProjectOptionsAllowlist"
                    },
                    "outputDirectory": {
                        "type": "string"
                    },
                    "passwordProtection": {
                        "$ref": "#/types/vercel:index/getProjectPasswordProtection:getProjectPasswordProtection"
                    },
                    "previewComments": {
                        "type": "boolean"
                    },
                    "prioritiseProductionBuilds": {
                        "type": "boolean"
                    },
                    "protectionBypassForAutomation": {
                        "type": "boolean"
                    },
                    "protectionBypassForAutomationSecret": {
                        "type": "string",
                        "secret": true
                    },
                    "publicSource": {
                        "type": "boolean"
                    },
                    "resourceConfig": {
                        "$ref": "#/types/vercel:index/getProjectResourceConfig:getProjectResourceConfig"
                    },
                    "rootDirectory": {
                        "type": "string"
                    },
                    "serverlessFunctionRegion": {
                        "type": "string"
                    },
                    "skewProtection": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "trustedIps": {
                        "$ref": "#/types/vercel:index/getProjectTrustedIps:getProjectTrustedIps"
                    },
                    "vercelAuthentication": {
                        "$ref": "#/types/vercel:index/getProjectVercelAuthentication:getProjectVercelAuthentication"
                    }
                },
                "type": "object",
                "required": [
                    "autoAssignCustomDomains",
                    "automaticallyExposeSystemEnvironmentVariables",
                    "buildCommand",
                    "customerSuccessCodeVisibility",
                    "devCommand",
                    "directoryListing",
                    "environments",
                    "framework",
                    "functionFailover",
                    "gitComments",
                    "gitForkProtection",
                    "gitLfs",
                    "gitRepository",
                    "id",
                    "ignoreCommand",
                    "installCommand",
                    "name",
                    "oidcTokenConfig",
                    "optionsAllowlist",
                    "outputDirectory",
                    "passwordProtection",
                    "previewComments",
                    "prioritiseProductionBuilds",
                    "protectionBypassForAutomation",
                    "protectionBypassForAutomationSecret",
                    "publicSource",
                    "resourceConfig",
                    "rootDirectory",
                    "serverlessFunctionRegion",
                    "skewProtection",
                    "teamId",
                    "trustedIps",
                    "vercelAuthentication"
                ]
            }
        },
        "vercel:index/getProjectDeploymentRetention:getProjectDeploymentRetention": {
            "inputs": {
                "description": "A collection of arguments for invoking getProjectDeploymentRetention.\n",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectDeploymentRetention.\n",
                "properties": {
                    "expirationCanceled": {
                        "type": "string"
                    },
                    "expirationErrored": {
                        "type": "string"
                    },
                    "expirationPreview": {
                        "type": "string"
                    },
                    "expirationProduction": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "expirationCanceled",
                    "expirationErrored",
                    "expirationPreview",
                    "expirationProduction",
                    "id",
                    "projectId",
                    "teamId"
                ]
            }
        },
        "vercel:index/getProjectDirectory:getProjectDirectory": {
            "inputs": {
                "description": "A collection of arguments for invoking getProjectDirectory.\n",
                "properties": {
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "path"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectDirectory.\n",
                "properties": {
                    "files": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "files",
                    "id",
                    "path"
                ]
            }
        },
        "vercel:index/getProjectMembers:getProjectMembers": {
            "inputs": {
                "description": "A collection of arguments for invoking getProjectMembers.\n",
                "properties": {
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "projectId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getProjectMembers.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/vercel:index/getProjectMembersMember:getProjectMembersMember"
                        }
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "members",
                    "projectId",
                    "id"
                ]
            }
        },
        "vercel:index/getSharedEnvironmentVariable:getSharedEnvironmentVariable": {
            "inputs": {
                "description": "A collection of arguments for invoking getSharedEnvironmentVariable.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "teamId": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "outputs": {
                "description": "A collection of values returned by getSharedEnvironmentVariable.\n",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "key": {
                        "type": "string"
                    },
                    "projectIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sensitive": {
                        "type": "boolean"
                    },
                    "targets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "secret": true
                    }
                },
                "type": "object",
                "required": [
                    "comment",
                    "id",
                    "key",
                    "projectIds",
                    "sensitive",
                    "targets",
                    "teamId",
                    "value"
                ]
            }
        },
        "vercel:index/getTeamConfig:getTeamConfig": {
            "inputs": {
                "description": "A collection of arguments for invoking getTeamConfig.\n",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "id"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTeamConfig.\n",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "emailDomain": {
                        "type": "string"
                    },
                    "enablePreviewFeedback": {
                        "type": "string"
                    },
                    "enableProductionFeedback": {
                        "type": "string"
                    },
                    "hideIpAddresses": {
                        "type": "boolean"
                    },
                    "hideIpAddressesInLogDrains": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "inviteCode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "previewDeploymentSuffix": {
                        "type": "string"
                    },
                    "remoteCaching": {
                        "$ref": "#/types/vercel:index/getTeamConfigRemoteCaching:getTeamConfigRemoteCaching"
                    },
                    "saml": {
                        "$ref": "#/types/vercel:index/getTeamConfigSaml:getTeamConfigSaml"
                    },
                    "sensitiveEnvironmentVariablePolicy": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "description",
                    "emailDomain",
                    "enablePreviewFeedback",
                    "enableProductionFeedback",
                    "hideIpAddresses",
                    "hideIpAddressesInLogDrains",
                    "id",
                    "inviteCode",
                    "name",
                    "previewDeploymentSuffix",
                    "remoteCaching",
                    "saml",
                    "sensitiveEnvironmentVariablePolicy",
                    "slug"
                ]
            }
        },
        "vercel:index/getTeamMember:getTeamMember": {
            "inputs": {
                "description": "A collection of arguments for invoking getTeamMember.\n",
                "properties": {
                    "teamId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "teamId",
                    "userId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTeamMember.\n",
                "properties": {
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/vercel:index/getTeamMemberProject:getTeamMemberProject"
                        }
                    },
                    "role": {
                        "type": "string"
                    },
                    "teamId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "accessGroups",
                    "id",
                    "projects",
                    "role",
                    "teamId",
                    "userId"
                ]
            }
        }
    }
}