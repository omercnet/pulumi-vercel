// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/go/vercel/internal"
)

func LookupDeployment(ctx *pulumi.Context, args *LookupDeploymentArgs, opts ...pulumi.InvokeOption) (*LookupDeploymentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDeploymentResult
	err := ctx.Invoke("vercel:index/getDeployment:getDeployment", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDeployment.
type LookupDeploymentArgs struct {
	Id     string  `pulumi:"id"`
	TeamId *string `pulumi:"teamId"`
}

// A collection of values returned by getDeployment.
type LookupDeploymentResult struct {
	Domains    []string `pulumi:"domains"`
	Id         string   `pulumi:"id"`
	Production bool     `pulumi:"production"`
	ProjectId  string   `pulumi:"projectId"`
	Ref        string   `pulumi:"ref"`
	TeamId     string   `pulumi:"teamId"`
	Url        string   `pulumi:"url"`
}

func LookupDeploymentOutput(ctx *pulumi.Context, args LookupDeploymentOutputArgs, opts ...pulumi.InvokeOption) LookupDeploymentResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeploymentResultOutput, error) {
			args := v.(LookupDeploymentArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupDeploymentResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getDeployment:getDeployment", args, &rv, "", opts...)
			if err != nil {
				return LookupDeploymentResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupDeploymentResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupDeploymentResultOutput), nil
			}
			return output, nil
		}).(LookupDeploymentResultOutput)
}

// A collection of arguments for invoking getDeployment.
type LookupDeploymentOutputArgs struct {
	Id     pulumi.StringInput    `pulumi:"id"`
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (LookupDeploymentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentArgs)(nil)).Elem()
}

// A collection of values returned by getDeployment.
type LookupDeploymentResultOutput struct{ *pulumi.OutputState }

func (LookupDeploymentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeploymentResult)(nil)).Elem()
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutput() LookupDeploymentResultOutput {
	return o
}

func (o LookupDeploymentResultOutput) ToLookupDeploymentResultOutputWithContext(ctx context.Context) LookupDeploymentResultOutput {
	return o
}

func (o LookupDeploymentResultOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupDeploymentResult) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

func (o LookupDeploymentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Production() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupDeploymentResult) bool { return v.Production }).(pulumi.BoolOutput)
}

func (o LookupDeploymentResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Ref() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Ref }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func (o LookupDeploymentResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeploymentResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeploymentResultOutput{})
}
