// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetAttackChallengeMode
    {
        public static Task<GetAttackChallengeModeResult> InvokeAsync(GetAttackChallengeModeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAttackChallengeModeResult>("vercel:index/getAttackChallengeMode:getAttackChallengeMode", args ?? new GetAttackChallengeModeArgs(), options.WithDefaults());

        public static Output<GetAttackChallengeModeResult> Invoke(GetAttackChallengeModeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAttackChallengeModeResult>("vercel:index/getAttackChallengeMode:getAttackChallengeMode", args ?? new GetAttackChallengeModeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAttackChallengeModeArgs : global::Pulumi.InvokeArgs
    {
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        [Input("teamId")]
        public string? TeamId { get; set; }

        public GetAttackChallengeModeArgs()
        {
        }
        public static new GetAttackChallengeModeArgs Empty => new GetAttackChallengeModeArgs();
    }

    public sealed class GetAttackChallengeModeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public GetAttackChallengeModeInvokeArgs()
        {
        }
        public static new GetAttackChallengeModeInvokeArgs Empty => new GetAttackChallengeModeInvokeArgs();
    }


    [OutputType]
    public sealed class GetAttackChallengeModeResult
    {
        public readonly bool Enabled;
        public readonly string Id;
        public readonly string ProjectId;
        public readonly string TeamId;

        [OutputConstructor]
        private GetAttackChallengeModeResult(
            bool enabled,

            string id,

            string projectId,

            string teamId)
        {
            Enabled = enabled;
            Id = id;
            ProjectId = projectId;
            TeamId = teamId;
        }
    }
}
