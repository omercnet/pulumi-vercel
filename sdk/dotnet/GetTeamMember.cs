// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetTeamMember
    {
        public static Task<GetTeamMemberResult> InvokeAsync(GetTeamMemberArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamMemberResult>("vercel:index/getTeamMember:getTeamMember", args ?? new GetTeamMemberArgs(), options.WithDefaults());

        public static Output<GetTeamMemberResult> Invoke(GetTeamMemberInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamMemberResult>("vercel:index/getTeamMember:getTeamMember", args ?? new GetTeamMemberInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamMemberArgs : global::Pulumi.InvokeArgs
    {
        [Input("teamId", required: true)]
        public string TeamId { get; set; } = null!;

        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetTeamMemberArgs()
        {
        }
        public static new GetTeamMemberArgs Empty => new GetTeamMemberArgs();
    }

    public sealed class GetTeamMemberInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("teamId", required: true)]
        public Input<string> TeamId { get; set; } = null!;

        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetTeamMemberInvokeArgs()
        {
        }
        public static new GetTeamMemberInvokeArgs Empty => new GetTeamMemberInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamMemberResult
    {
        public readonly ImmutableArray<string> AccessGroups;
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTeamMemberProjectResult> Projects;
        public readonly string Role;
        public readonly string TeamId;
        public readonly string UserId;

        [OutputConstructor]
        private GetTeamMemberResult(
            ImmutableArray<string> accessGroups,

            string id,

            ImmutableArray<Outputs.GetTeamMemberProjectResult> projects,

            string role,

            string teamId,

            string userId)
        {
            AccessGroups = accessGroups;
            Id = id;
            Projects = projects;
            Role = role;
            TeamId = teamId;
            UserId = userId;
        }
    }
}
