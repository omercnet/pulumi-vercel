// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetLogDrain
    {
        public static Task<GetLogDrainResult> InvokeAsync(GetLogDrainArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetLogDrainResult>("vercel:index/getLogDrain:getLogDrain", args ?? new GetLogDrainArgs(), options.WithDefaults());

        public static Output<GetLogDrainResult> Invoke(GetLogDrainInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetLogDrainResult>("vercel:index/getLogDrain:getLogDrain", args ?? new GetLogDrainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetLogDrainArgs : global::Pulumi.InvokeArgs
    {
        [Input("endpoint", required: true)]
        public string Endpoint { get; set; } = null!;

        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        [Input("teamId")]
        public string? TeamId { get; set; }

        public GetLogDrainArgs()
        {
        }
        public static new GetLogDrainArgs Empty => new GetLogDrainArgs();
    }

    public sealed class GetLogDrainInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("endpoint", required: true)]
        public Input<string> Endpoint { get; set; } = null!;

        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        public GetLogDrainInvokeArgs()
        {
        }
        public static new GetLogDrainInvokeArgs Empty => new GetLogDrainInvokeArgs();
    }


    [OutputType]
    public sealed class GetLogDrainResult
    {
        public readonly string DeliveryFormat;
        public readonly string Endpoint;
        public readonly ImmutableArray<string> Environments;
        public readonly ImmutableDictionary<string, string> Headers;
        public readonly string Id;
        public readonly ImmutableArray<string> ProjectIds;
        public readonly double SamplingRate;
        public readonly ImmutableArray<string> Sources;
        public readonly string TeamId;

        [OutputConstructor]
        private GetLogDrainResult(
            string deliveryFormat,

            string endpoint,

            ImmutableArray<string> environments,

            ImmutableDictionary<string, string> headers,

            string id,

            ImmutableArray<string> projectIds,

            double samplingRate,

            ImmutableArray<string> sources,

            string teamId)
        {
            DeliveryFormat = deliveryFormat;
            Endpoint = endpoint;
            Environments = environments;
            Headers = headers;
            Id = id;
            ProjectIds = projectIds;
            SamplingRate = samplingRate;
            Sources = sources;
            TeamId = teamId;
        }
    }
}
