// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel
{
    public static class GetTeamConfig
    {
        public static Task<GetTeamConfigResult> InvokeAsync(GetTeamConfigArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamConfigResult>("vercel:index/getTeamConfig:getTeamConfig", args ?? new GetTeamConfigArgs(), options.WithDefaults());

        public static Output<GetTeamConfigResult> Invoke(GetTeamConfigInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamConfigResult>("vercel:index/getTeamConfig:getTeamConfig", args ?? new GetTeamConfigInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamConfigArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public string Id { get; set; } = null!;

        public GetTeamConfigArgs()
        {
        }
        public static new GetTeamConfigArgs Empty => new GetTeamConfigArgs();
    }

    public sealed class GetTeamConfigInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id", required: true)]
        public Input<string> Id { get; set; } = null!;

        public GetTeamConfigInvokeArgs()
        {
        }
        public static new GetTeamConfigInvokeArgs Empty => new GetTeamConfigInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamConfigResult
    {
        public readonly string Description;
        public readonly string EmailDomain;
        public readonly string EnablePreviewFeedback;
        public readonly string EnableProductionFeedback;
        public readonly bool HideIpAddresses;
        public readonly bool HideIpAddressesInLogDrains;
        public readonly string Id;
        public readonly string InviteCode;
        public readonly string Name;
        public readonly string PreviewDeploymentSuffix;
        public readonly Outputs.GetTeamConfigRemoteCachingResult RemoteCaching;
        public readonly Outputs.GetTeamConfigSamlResult Saml;
        public readonly string SensitiveEnvironmentVariablePolicy;
        public readonly string Slug;

        [OutputConstructor]
        private GetTeamConfigResult(
            string description,

            string emailDomain,

            string enablePreviewFeedback,

            string enableProductionFeedback,

            bool hideIpAddresses,

            bool hideIpAddressesInLogDrains,

            string id,

            string inviteCode,

            string name,

            string previewDeploymentSuffix,

            Outputs.GetTeamConfigRemoteCachingResult remoteCaching,

            Outputs.GetTeamConfigSamlResult saml,

            string sensitiveEnvironmentVariablePolicy,

            string slug)
        {
            Description = description;
            EmailDomain = emailDomain;
            EnablePreviewFeedback = enablePreviewFeedback;
            EnableProductionFeedback = enableProductionFeedback;
            HideIpAddresses = hideIpAddresses;
            HideIpAddressesInLogDrains = hideIpAddressesInLogDrains;
            Id = id;
            InviteCode = inviteCode;
            Name = name;
            PreviewDeploymentSuffix = previewDeploymentSuffix;
            RemoteCaching = remoteCaching;
            Saml = saml;
            SensitiveEnvironmentVariablePolicy = sensitiveEnvironmentVariablePolicy;
            Slug = slug;
        }
    }
}
