// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Pulumiverse.Vercel.Inputs
{

    public sealed class ProjectGitRepositoryGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("deployHooks")]
        private InputList<Inputs.ProjectGitRepositoryDeployHookGetArgs>? _deployHooks;

        /// <summary>
        /// Deploy hooks are unique URLs that allow you to trigger a deployment of a given branch. See https://vercel.com/docs/deployments/deploy-hooks for full information.
        /// </summary>
        public InputList<Inputs.ProjectGitRepositoryDeployHookGetArgs> DeployHooks
        {
            get => _deployHooks ?? (_deployHooks = new InputList<Inputs.ProjectGitRepositoryDeployHookGetArgs>());
            set => _deployHooks = value;
        }

        /// <summary>
        /// By default, every commit pushed to the main branch will trigger a Production Deployment instead of the usual Preview Deployment. You can switch to a different branch here.
        /// </summary>
        [Input("productionBranch")]
        public Input<string>? ProductionBranch { get; set; }

        /// <summary>
        /// The name of the git repository. For example: `vercel/next.js`.
        /// </summary>
        [Input("repo", required: true)]
        public Input<string> Repo { get; set; } = null!;

        /// <summary>
        /// The git provider of the repository. Must be either `github`, `gitlab`, or `bitbucket`.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public ProjectGitRepositoryGetArgs()
        {
        }
        public static new ProjectGitRepositoryGetArgs Empty => new ProjectGitRepositoryGetArgs();
    }
}
