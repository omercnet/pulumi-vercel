// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/go/vercel/internal"
)

func LookupAlias(ctx *pulumi.Context, args *LookupAliasArgs, opts ...pulumi.InvokeOption) (*LookupAliasResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAliasResult
	err := ctx.Invoke("vercel:index/getAlias:getAlias", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlias.
type LookupAliasArgs struct {
	Alias  string  `pulumi:"alias"`
	TeamId *string `pulumi:"teamId"`
}

// A collection of values returned by getAlias.
type LookupAliasResult struct {
	Alias        string `pulumi:"alias"`
	DeploymentId string `pulumi:"deploymentId"`
	Id           string `pulumi:"id"`
	TeamId       string `pulumi:"teamId"`
}

func LookupAliasOutput(ctx *pulumi.Context, args LookupAliasOutputArgs, opts ...pulumi.InvokeOption) LookupAliasResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAliasResultOutput, error) {
			args := v.(LookupAliasArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupAliasResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getAlias:getAlias", args, &rv, "", opts...)
			if err != nil {
				return LookupAliasResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupAliasResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupAliasResultOutput), nil
			}
			return output, nil
		}).(LookupAliasResultOutput)
}

// A collection of arguments for invoking getAlias.
type LookupAliasOutputArgs struct {
	Alias  pulumi.StringInput    `pulumi:"alias"`
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (LookupAliasOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAliasArgs)(nil)).Elem()
}

// A collection of values returned by getAlias.
type LookupAliasResultOutput struct{ *pulumi.OutputState }

func (LookupAliasResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAliasResult)(nil)).Elem()
}

func (o LookupAliasResultOutput) ToLookupAliasResultOutput() LookupAliasResultOutput {
	return o
}

func (o LookupAliasResultOutput) ToLookupAliasResultOutputWithContext(ctx context.Context) LookupAliasResultOutput {
	return o
}

func (o LookupAliasResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAliasResult) string { return v.Alias }).(pulumi.StringOutput)
}

func (o LookupAliasResultOutput) DeploymentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAliasResult) string { return v.DeploymentId }).(pulumi.StringOutput)
}

func (o LookupAliasResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAliasResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAliasResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAliasResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAliasResultOutput{})
}
