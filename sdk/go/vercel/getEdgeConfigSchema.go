// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vercel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumiverse/pulumi-vercel/sdk/go/vercel/internal"
)

func LookupEdgeConfigSchema(ctx *pulumi.Context, args *LookupEdgeConfigSchemaArgs, opts ...pulumi.InvokeOption) (*LookupEdgeConfigSchemaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEdgeConfigSchemaResult
	err := ctx.Invoke("vercel:index/getEdgeConfigSchema:getEdgeConfigSchema", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEdgeConfigSchema.
type LookupEdgeConfigSchemaArgs struct {
	Id     string  `pulumi:"id"`
	TeamId *string `pulumi:"teamId"`
}

// A collection of values returned by getEdgeConfigSchema.
type LookupEdgeConfigSchemaResult struct {
	Definition string `pulumi:"definition"`
	Id         string `pulumi:"id"`
	TeamId     string `pulumi:"teamId"`
}

func LookupEdgeConfigSchemaOutput(ctx *pulumi.Context, args LookupEdgeConfigSchemaOutputArgs, opts ...pulumi.InvokeOption) LookupEdgeConfigSchemaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEdgeConfigSchemaResultOutput, error) {
			args := v.(LookupEdgeConfigSchemaArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupEdgeConfigSchemaResult
			secret, err := ctx.InvokePackageRaw("vercel:index/getEdgeConfigSchema:getEdgeConfigSchema", args, &rv, "", opts...)
			if err != nil {
				return LookupEdgeConfigSchemaResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupEdgeConfigSchemaResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupEdgeConfigSchemaResultOutput), nil
			}
			return output, nil
		}).(LookupEdgeConfigSchemaResultOutput)
}

// A collection of arguments for invoking getEdgeConfigSchema.
type LookupEdgeConfigSchemaOutputArgs struct {
	Id     pulumi.StringInput    `pulumi:"id"`
	TeamId pulumi.StringPtrInput `pulumi:"teamId"`
}

func (LookupEdgeConfigSchemaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeConfigSchemaArgs)(nil)).Elem()
}

// A collection of values returned by getEdgeConfigSchema.
type LookupEdgeConfigSchemaResultOutput struct{ *pulumi.OutputState }

func (LookupEdgeConfigSchemaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEdgeConfigSchemaResult)(nil)).Elem()
}

func (o LookupEdgeConfigSchemaResultOutput) ToLookupEdgeConfigSchemaResultOutput() LookupEdgeConfigSchemaResultOutput {
	return o
}

func (o LookupEdgeConfigSchemaResultOutput) ToLookupEdgeConfigSchemaResultOutputWithContext(ctx context.Context) LookupEdgeConfigSchemaResultOutput {
	return o
}

func (o LookupEdgeConfigSchemaResultOutput) Definition() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeConfigSchemaResult) string { return v.Definition }).(pulumi.StringOutput)
}

func (o LookupEdgeConfigSchemaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeConfigSchemaResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEdgeConfigSchemaResultOutput) TeamId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEdgeConfigSchemaResult) string { return v.TeamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEdgeConfigSchemaResultOutput{})
}
